{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport storage from \"./local.storage\";\n\nvar UserSession = function () {\n  function UserSession() {\n    _classCallCheck(this, UserSession);\n  }\n\n  _createClass(UserSession, [{\n    key: \"login\",\n    value: function login(username, token) {\n      storage.setItem(UserSession.LOGGED, username);\n      storage.setItem(UserSession.TOKEN, token);\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return _regeneratorRuntime.async(function getToken$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", storage.getItem(UserSession.TOKEN));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getLoggedUser\",\n    value: function getLoggedUser() {\n      return _regeneratorRuntime.async(function getLoggedUser$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", storage.getItem(UserSession.LOGGED));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      storage.removeItem(UserSession.LOGGED);\n      storage.removeItem(UserSession.TOKEN);\n    }\n  }]);\n\n  return UserSession;\n}();\n\nUserSession.LOGGED = \"logged\";\nUserSession.TOKEN = \"token\";\nexport default new UserSession();","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/storage/user.session.ts"],"names":["storage","UserSession","username","token","setItem","LOGGED","TOKEN","getItem","removeItem"],"mappings":";;;AAAA,OAAOA,OAAP;;IAEMC,W;;;;;;;0BAKWC,Q,EAAkBC,K,EAAqB;AAChDH,MAAAA,OAAO,CAACI,OAAR,CAAgBH,WAAW,CAACI,MAA5B,EAAoCH,QAApC;AACAF,MAAAA,OAAO,CAACI,OAAR,CAAgBH,WAAW,CAACK,KAA5B,EAAmCH,KAAnC;AACH;;;;;;;;+CAGUH,OAAO,CAACO,OAAR,CAAgBN,WAAW,CAACK,KAA5B,C;;;;;;;;;;;;;;;;gDAIAN,OAAO,CAACO,OAAR,CAAgBN,WAAW,CAACI,MAA5B,C;;;;;;;;;;;6BAGW;AAClBL,MAAAA,OAAO,CAACQ,UAAR,CAAmBP,WAAW,CAACI,MAA/B;AACAL,MAAAA,OAAO,CAACQ,UAAR,CAAmBP,WAAW,CAACK,KAA/B;AACH;;;;;;AArBCL,W,CAEsBI,M,GAAiB,Q;AAFvCJ,W,CAGsBK,K,GAAgB,O;AAsB5C,eAAe,IAAIL,WAAJ,EAAf","sourcesContent":["import storage from './local.storage';\n\nclass UserSession {\n\n    private static readonly LOGGED: string = \"logged\";\n    private static readonly TOKEN: string = \"token\";\n\n    public login(username: string, token: string): void {\n        storage.setItem(UserSession.LOGGED, username);\n        storage.setItem(UserSession.TOKEN, token);\n    }\n\n    public async getToken(): Promise<string> {\n        return storage.getItem(UserSession.TOKEN);\n    }\n\n    public async getLoggedUser(): Promise<string> {\n        return storage.getItem(UserSession.LOGGED);\n    }\n\n    public logout(): void {\n        storage.removeItem(UserSession.LOGGED);\n        storage.removeItem(UserSession.TOKEN);\n    }\n\n}\n\nexport default new UserSession();"]},"metadata":{},"sourceType":"module"}