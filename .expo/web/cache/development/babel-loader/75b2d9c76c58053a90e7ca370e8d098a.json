{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/sales-order/index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { SalesOrderScreenView } from \"./view\";\nexport var SalesOrderScreen = function (_Component) {\n  _inherits(SalesOrderScreen, _Component);\n\n  var _super = _createSuper(SalesOrderScreen);\n\n  function SalesOrderScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SalesOrderScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      salesOrder: _this.props.route.params\n    };\n    return _this;\n  }\n\n  _createClass(SalesOrderScreen, [{\n    key: \"render\",\n    value: function render() {\n      var total = 0.0;\n\n      if (this.state.salesOrder.items) {\n        this.state.salesOrder.items.forEach(function (item) {\n          total += item.price * item.amount;\n        });\n      }\n\n      return React.createElement(SalesOrderScreenView, {\n        salesOrder: this.state.salesOrder,\n        total: total,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }\n      });\n    }\n  }]);\n\n  return SalesOrderScreen;\n}(Component);","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/sales-order/index.tsx"],"names":["React","Component","SalesOrderScreenView","SalesOrderScreen","props","state","salesOrder","route","params","total","items","forEach","item","price","amount"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AAGA,SAASC,oBAAT;AAKA,WAAaC,gBAAb;AAAA;;AAAA;;AAEI,4BAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,MAAKF,KAAL,CAAWG,KAAX,CAAiBC;AADpB,KAAb;AAFoB;AAKvB;;AAPL;AAAA;AAAA,6BAS+B;AACvB,UAAIC,KAAa,GAAG,GAApB;;AAEA,UAAI,KAAKJ,KAAL,CAAWC,UAAX,CAAsBI,KAA1B,EAAiC;AAC7B,aAAKL,KAAL,CAAWC,UAAX,CAAsBI,KAAtB,CAA4BC,OAA5B,CAAoC,UAACC,IAAD,EAAgB;AAChDH,UAAAA,KAAK,IAAIG,IAAI,CAACC,KAAL,GAAcD,IAAI,CAACE,MAA5B;AACH,SAFD;AAGH;;AAED,aAAO,oBAAC,oBAAD;AAAsB,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWC,UAA7C;AAAyD,QAAA,KAAK,EAAEG,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AAnBL;;AAAA;AAAA,EAAsCR,SAAtC","sourcesContent":["import React, { Component, ReactNode } from 'react';\n\nimport { SalesOrder } from '../../model/sales.order';\nimport { SalesOrderScreenView } from './view';\nimport { Item } from '../../model/item';\n\ntype State = { salesOrder: SalesOrder }\n\nexport class SalesOrderScreen extends Component<any, State> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            salesOrder: this.props.route.params\n        };\n    }\n\n    public render(): ReactNode {\n        let total: number = 0.0;\n\n        if (this.state.salesOrder.items) {\n            this.state.salesOrder.items.forEach((item: Item) => {\n                total += item.price! * item.amount!;\n            });\n        }\n\n        return <SalesOrderScreenView salesOrder={this.state.salesOrder} total={total} />\n    }\n}"]},"metadata":{},"sourceType":"module"}