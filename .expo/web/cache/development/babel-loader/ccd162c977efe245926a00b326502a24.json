{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { create } from 'apisauce';\nvar Authorization = \"Authorization\";\nvar headers = {\n  Accept: 'application/json'\n};\n\nvar ServiceAPI = function () {\n  function ServiceAPI() {\n    _classCallCheck(this, ServiceAPI);\n\n    this.apiUsers = create({\n      baseURL: \"http://127.0.0.1:3001/\",\n      headers: headers\n    });\n    this.apiProducts = create({\n      baseURL: \"http://127.0.0.1:3002/\",\n      headers: headers\n    });\n    this.apiSales = create({\n      baseURL: \"http://127.0.0.1:3003/\",\n      headers: headers\n    });\n  }\n\n  _createClass(ServiceAPI, [{\n    key: \"getProductList\",\n    value: function getProductList() {\n      return _regeneratorRuntime.async(function getProductList$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.apiProducts.get('products'));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"login\",\n    value: function login(user) {\n      var login, password;\n      return _regeneratorRuntime.async(function login$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              login = user.login, password = user.password;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(this.apiUsers.post('users/login', {\n                username: login,\n                password: password\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addCustomer\",\n    value: function addCustomer(body) {\n      return _regeneratorRuntime.async(function addCustomer$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this.apiUsers.post('users/customers', body));\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSalesOrderList\",\n    value: function getSalesOrderList(token) {\n      return _regeneratorRuntime.async(function getSalesOrderList$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.apiUsers.setHeader(Authorization, \"Bearer \" + token);\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(this.apiSales.get('sales/orders'));\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"invoice\",\n    value: function invoice(items, token) {\n      return _regeneratorRuntime.async(function invoice$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this.apiUsers.setHeader(Authorization, \"Bearer \" + token);\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(this.apiSales.post('sales/orders', items, {\n                headers: {\n                  Authorization: \"Bearer \" + token\n                }\n              }));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return ServiceAPI;\n}();\n\nexport default new ServiceAPI();","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/utils/connection.api.ts"],"names":["create","Authorization","headers","Accept","ServiceAPI","apiUsers","baseURL","apiProducts","apiSales","get","user","login","password","post","username","body","token","setHeader","items"],"mappings":";;;AAAA,SAASA,MAAT,QAAyC,UAAzC;AAIA,IAAMC,aAAqB,GAAG,eAA9B;AAEA,IAAMC,OAAO,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAhB;;IAEMC,U;;;;SAEeC,Q,GAA6BL,MAAM,CAAC;AAEjDM,MAAAA,OAAO,EAAE,wBAFwC;AAGjDJ,MAAAA,OAAO,EAAPA;AAHiD,KAAD,C;SAMnCK,W,GAAgCP,MAAM,CAAC;AAEpDM,MAAAA,OAAO,EAAE,wBAF2C;AAGpDJ,MAAAA,OAAO,EAAPA;AAHoD,KAAD,C;SAMtCM,Q,GAA6BR,MAAM,CAAC;AAEjDM,MAAAA,OAAO,EAAE,wBAFwC;AAGjDJ,MAAAA,OAAO,EAAPA;AAHiD,KAAD,C;;;;;;;;;;;+CAOnC,KAAKK,WAAL,CAAiBE,GAAjB,CAAqB,UAArB,C;;;;;;;;;;;;;;0BAGEC,I;;;;;;AACPC,cAAAA,K,GAAoBD,I,CAApBC,K,EAAOC,Q,GAAaF,I,CAAbE,Q;;+CACF,KAAKP,QAAL,CAAcQ,IAAd,CAAmB,aAAnB,EAAkC;AAAEC,gBAAAA,QAAQ,EAAEH,KAAZ;AAAmBC,gBAAAA,QAAQ,EAARA;AAAnB,eAAlC,C;;;;;;;;;;;;;;gCAGQG,I;;;;;;+CACR,KAAKV,QAAL,CAAcQ,IAAd,CAAmB,iBAAnB,EAAsCE,IAAtC,C;;;;;;;;;;;;;;sCAGcC,K;;;;;AAC3B,mBAAKX,QAAL,CAAcY,SAAd,CAAwBhB,aAAxB,EAAuC,YAAWe,KAAlD;;+CACa,KAAKR,QAAL,CAAcC,GAAd,CAAkB,cAAlB,C;;;;;;;;;;;;;;4BAGIS,K,EAAeF,K;;;;;AAChC,mBAAKX,QAAL,CAAcY,SAAd,CAAwBhB,aAAxB,EAAuC,YAAWe,KAAlD;;+CACa,KAAKR,QAAL,CAAcK,IAAd,CAAmB,cAAnB,EAAmCK,KAAnC,EAA0C;AAAEhB,gBAAAA,OAAO,EAAE;AAAED,kBAAAA,aAAa,EAAE,YAAWe;AAA5B;AAAX,eAA1C,C;;;;;;;;;;;;;;;;;AAKrB,eAAe,IAAIZ,UAAJ,EAAf","sourcesContent":["import { create, ApisauceInstance } from 'apisauce';\nimport { Item } from '../model/item';\nimport { User } from '../model/user';\n\nconst Authorization: string = \"Authorization\";\n\nconst headers = { Accept: 'application/json' };\n\nclass ServiceAPI {\n    \n    private readonly apiUsers: ApisauceInstance = create({\n        // baseURL: \"http://example-ecommerce.herokuapp.com/\",\n        baseURL: \"http://127.0.0.1:3001/\",\n        headers,\n    });\n\n    private readonly apiProducts: ApisauceInstance = create({\n        // baseURL: \"http://example-ecommerce.herokuapp.com/\",\n        baseURL: \"http://127.0.0.1:3002/\",\n        headers,\n    });\n\n    private readonly apiSales: ApisauceInstance = create({\n        // baseURL: \"http://example-ecommerce.herokuapp.com/\",\n        baseURL: \"http://127.0.0.1:3003/\",\n        headers,\n    });\n\n    public async getProductList() {\n        return await this.apiProducts.get('products');\n    }\n\n    public async login(user: User) {\n        const { login, password } = user;\n        return await this.apiUsers.post('users/login', { username: login, password });\n    }\n\n    public async addCustomer(body: any) {\n        return await this.apiUsers.post('users/customers', body);\n    }\n\n    public async getSalesOrderList(token: string) {\n        this.apiUsers.setHeader(Authorization, \"Bearer \"+ token);\n        return await this.apiSales.get('sales/orders');\n    }\n\n    public async invoice(items: Item[], token: string) {\n        this.apiUsers.setHeader(Authorization, \"Bearer \"+ token);\n        return await this.apiSales.post('sales/orders', items, { headers: { Authorization: \"Bearer \"+ token } });\n    }\n\n}\n\nexport default new ServiceAPI();"]},"metadata":{},"sourceType":"module"}