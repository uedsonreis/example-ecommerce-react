{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/cart/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport api from \"../../utils/connection.api\";\nimport HTTP from \"../../utils/http.codes\";\nimport cartStorage from \"../../storage/cart.storage\";\nimport userSession from \"../../storage/user.session\";\nimport { CartView } from \"./view\";\nexport var CartScreen = function (_Component) {\n  _inherits(CartScreen, _Component);\n\n  var _super = _createSuper(CartScreen);\n\n  function CartScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CartScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      items: [],\n      total: 0.0\n    };\n    cartStorage.addObserver(function () {\n      _this.updateItems();\n    });\n    return _this;\n  }\n\n  _createClass(CartScreen, [{\n    key: \"updateItems\",\n    value: function updateItems() {\n      var items, total;\n      return _regeneratorRuntime.async(function updateItems$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              items = cartStorage.items;\n              this.setState({\n                items: items\n              });\n              total = 0.0;\n              items.forEach(function (item) {\n                total += item.price * item.amount;\n              });\n              this.setState({\n                total: total\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateItems();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var _this2 = this;\n\n      cartStorage.remove(item).then(function () {\n        _this2.updateItems();\n      });\n    }\n  }, {\n    key: \"invoice\",\n    value: function invoice() {\n      var _this3 = this;\n\n      this.state.items.map(function (item) {\n        item.productId = item.product.id;\n        return _objectSpread({}, item, {\n          productId: item.product.id\n        });\n      });\n      userSession.getToken().then(function (token) {\n        api.invoice(_this3.state.items, token).then(function (result) {\n          if (result.status === HTTP.BAD_REQUEST) {\n            alert(\"Você precisa logar como Cliente para fechar o pedido!\");\n\n            _this3.props.navigation.navigate('login');\n          } else if (result.status === HTTP.FORBIDDEN) {\n            alert(\"Você precisa logar para fechar o pedido!\");\n\n            _this3.props.navigation.navigate('login');\n          } else if (result.status === HTTP.OK) {\n            cartStorage.clear();\n\n            _this3.props.navigation.navigate('salesOrder');\n          } else {\n            alert(\"Erro ao buscar os pedidos: \" + JSON.stringify(result.data));\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CartView, {\n        items: this.state.items,\n        total: this.state.total,\n        actions: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return CartScreen;\n}(Component);","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/cart/index.tsx"],"names":["React","Component","api","HTTP","cartStorage","userSession","CartView","CartScreen","props","state","items","total","addObserver","updateItems","setState","forEach","item","price","amount","remove","then","map","productId","product","id","getToken","token","invoice","result","status","BAD_REQUEST","alert","navigation","navigate","FORBIDDEN","OK","clear","JSON","stringify","data"],"mappings":"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","sourcesContent":["import React, { Component, ReactNode } from 'react';\n\nimport api from '../../utils/connection.api';\nimport HTTP from '../../utils/http.codes';\nimport { Item } from '../../model/item';\nimport cartStorage from '../../storage/cart.storage';\nimport userSession from '../../storage/user.session';\nimport { CartView } from './view';\n\ntype State = { items: Item[], total: number }\n\nexport class CartScreen extends Component<any, State> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            items: [],\n            total: 0.0\n        };\n\n        cartStorage.addObserver(() => {\n            this.updateItems();\n        });\n    }\n\n    private async updateItems(): Promise<void> {\n        const items: Item[] = cartStorage.items;\n        this.setState({ items: items });\n\n        let total: number = 0.0;\n\n        items.forEach((item: Item) => {\n            total += item.price! * item.amount!;\n        });\n\n        this.setState({ total: total });\n    }\n\n    componentDidMount(): void {\n        this.updateItems();\n    }\n\n    public remove(item: Item): void {\n        cartStorage.remove(item).then(() => {\n            this.updateItems();\n        });\n    }\n\n    public invoice(): void {\n        this.state.items.map(item => {\n            item.productId = item.product!.id;\n            return { ...item, productId: item.product!.id };\n        });\n\n        userSession.getToken().then((token: string) => {\n            api.invoice(this.state.items, token).then((result: any) => {\n                if (result.status === HTTP.BAD_REQUEST) {\n                    alert(\"Você precisa logar como Cliente para fechar o pedido!\");\n                    this.props.navigation.navigate('login');\n                } else if (result.status === HTTP.FORBIDDEN) {\n                    alert(\"Você precisa logar para fechar o pedido!\");\n                    this.props.navigation.navigate('login');\n                } else if (result.status === HTTP.OK) {\n                    cartStorage.clear();\n                    this.props.navigation.navigate('salesOrder');\n                } else {\n                    alert(\"Erro ao buscar os pedidos: \"+JSON.stringify(result.data));\n                }\n            });\n        });\n    }\n\n    public render(): ReactNode {\n        return (\n            <CartView items={this.state.items} total={this.state.total} actions={this} />\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}