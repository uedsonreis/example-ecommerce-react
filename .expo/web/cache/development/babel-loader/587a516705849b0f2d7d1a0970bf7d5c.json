{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/product/index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport cartStorage from \"../../storage/cart.storage\";\nimport { ProductView } from \"./view\";\nexport var ProductScreen = function (_Component) {\n  _inherits(ProductScreen, _Component);\n\n  var _super = _createSuper(ProductScreen);\n\n  function ProductScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ProductScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      product: _this.props.route.params\n    };\n    return _this;\n  }\n\n  _createClass(ProductScreen, [{\n    key: \"addToCart\",\n    value: function addToCart() {\n      var item = {\n        amount: 1,\n        product: this.state.product,\n        price: this.state.product.price\n      };\n      cartStorage.add(item);\n      this.props.navigation.pop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ProductView, {\n        product: this.state.product,\n        actions: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return ProductScreen;\n}(Component);","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/product/index.tsx"],"names":["React","Component","cartStorage","ProductView","ProductScreen","props","state","product","route","params","item","amount","price","add","navigation","pop"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AAEA,OAAOC,WAAP;AAGA,SAASC,WAAT;AAIA,WAAaC,aAAb;AAAA;;AAAA;;AAEI,yBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,MAAKF,KAAL,CAAWG,KAAX,CAAiBC;AADjB,KAAb;AAHoB;AAMvB;;AARL;AAAA;AAAA,gCAU6B;AACrB,UAAMC,IAAU,GAAG;AACfC,QAAAA,MAAM,EAAE,CADO;AAEfJ,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAFL;AAGfK,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,OAAX,CAAmBK;AAHX,OAAnB;AAMAV,MAAAA,WAAW,CAACW,GAAZ,CAAgBH,IAAhB;AACA,WAAKL,KAAL,CAAWS,UAAX,CAAsBC,GAAtB;AACH;AAnBL;AAAA;AAAA,6BAqB+B;AACvB,aACI,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWC,OAAjC;AAA0C,QAAA,OAAO,EAAE,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AAzBL;;AAAA;AAAA,EAAmCN,SAAnC","sourcesContent":["import React, { Component, ReactNode } from 'react';\n\nimport cartStorage from '../../storage/cart.storage';\nimport { Product } from '../../model/product';\nimport { Item } from '../../model/item';\nimport { ProductView } from './view';\n\ntype State = { product: Product };\n\nexport class ProductScreen extends Component<any, State> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            product: this.props.route.params\n        };\n    }\n\n    public addToCart(): void {\n        const item: Item = {\n            amount: 1,\n            product: this.state.product,\n            price: this.state.product.price,\n        };\n\n        cartStorage.add(item);\n        this.props.navigation.pop();\n    }\n\n    public render(): ReactNode {\n        return (\n            <ProductView product={this.state.product} actions={this} />\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}