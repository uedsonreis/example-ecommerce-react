{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/sales-order-list/index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport api from \"../../utils/connection.api\";\nimport userSession from \"../../storage/user.session\";\nimport HTTP from \"../../utils/http.codes\";\nimport { SalesOrderListView } from \"./view\";\nexport var SalesOrderListScreen = function (_Component) {\n  _inherits(SalesOrderListScreen, _Component);\n\n  var _super = _createSuper(SalesOrderListScreen);\n\n  function SalesOrderListScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SalesOrderListScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      salesOrders: []\n    };\n\n    _this.updateList();\n\n    return _this;\n  }\n\n  _createClass(SalesOrderListScreen, [{\n    key: \"updateList\",\n    value: function updateList() {\n      var _this2 = this;\n\n      userSession.getToken().then(function (token) {\n        api.getSalesOrderList(token).then(function (result) {\n          if (result.status === HTTP.BAD_REQUEST) {\n            alert(\"You must login as a Customer to do the purchasing!\");\n\n            _this2.props.navigation.navigate('Login');\n          } else if (result.status === HTTP.FORBIDDEN) {\n            alert(\"Validation failure, You are not logged!\");\n\n            _this2.props.navigation.navigate('Login');\n          } else if (result.status === HTTP.OK) {\n            _this2.setState({\n              salesOrders: result.data\n            });\n\n            console.log(\"The sales orders are here: \" + result.data);\n          } else {\n            alert(\"Erro ao buscar os pedidos: \" + JSON.stringify(result.data));\n          }\n        });\n      });\n    }\n  }, {\n    key: \"formatDate\",\n    value: function formatDate(dateText) {\n      var day = dateText.substring(8, 10);\n      var month = dateText.substring(5, 7);\n      var year = dateText.substring(0, 4);\n      var hours = dateText.substring(11, 16);\n      return day + \"/\" + month + \"/\" + year + \" às \" + hours + \"h\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SalesOrderListView, {\n        salesOrders: this.state.salesOrders,\n        actions: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return SalesOrderListScreen;\n}(Component);","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/sales-order-list/index.tsx"],"names":["React","Component","api","userSession","HTTP","SalesOrderListView","SalesOrderListScreen","props","state","salesOrders","updateList","getToken","then","token","getSalesOrderList","result","status","BAD_REQUEST","alert","navigation","navigate","FORBIDDEN","OK","setState","data","console","log","JSON","stringify","dateText","day","substring","month","year","hours"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AAEA,OAAOC,GAAP;AACA,OAAOC,WAAP;AACA,OAAOC,IAAP;AAGA,SAASC,kBAAT;AAIA,WAAaC,oBAAb;AAAA;;AAAA;;AAEI,gCAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;;AACA,UAAKC,UAAL;;AAHoB;AAIvB;;AANL;AAAA;AAAA,iCAQ+B;AAAA;;AACvBP,MAAAA,WAAW,CAACQ,QAAZ,GAAuBC,IAAvB,CAA4B,UAACC,KAAD,EAAmB;AAC3CX,QAAAA,GAAG,CAACY,iBAAJ,CAAsBD,KAAtB,EAA6BD,IAA7B,CAAkC,UAACG,MAAD,EAAiB;AAC/C,cAAIA,MAAM,CAACC,MAAP,KAAkBZ,IAAI,CAACa,WAA3B,EAAwC;AACpCC,YAAAA,KAAK,CAAC,oDAAD,CAAL;;AACA,YAAA,MAAI,CAACX,KAAL,CAAWY,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACH,WAHD,MAGO,IAAIL,MAAM,CAACC,MAAP,KAAkBZ,IAAI,CAACiB,SAA3B,EAAsC;AACzCH,YAAAA,KAAK,CAAC,yCAAD,CAAL;;AACA,YAAA,MAAI,CAACX,KAAL,CAAWY,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACH,WAHM,MAGA,IAAIL,MAAM,CAACC,MAAP,KAAkBZ,IAAI,CAACkB,EAA3B,EAA+B;AAClC,YAAA,MAAI,CAACC,QAAL,CAAc;AAAEd,cAAAA,WAAW,EAAEM,MAAM,CAACS;AAAtB,aAAd;;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAA+BX,MAAM,CAACS,IAAlD;AACH,WAHM,MAGA;AACHN,YAAAA,KAAK,CAAC,gCAA8BS,IAAI,CAACC,SAAL,CAAeb,MAAM,CAACS,IAAtB,CAA/B,CAAL;AACH;AACJ,SAbD;AAcH,OAfD;AAgBH;AAzBL;AAAA;AAAA,+BA2BsBK,QA3BtB,EA2BgD;AACxC,UAAMC,GAAW,GAAGD,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,EAAtB,CAApB;AACA,UAAMC,KAAa,GAAGH,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAtB;AACA,UAAME,IAAY,GAAGJ,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAArB;AACA,UAAMG,KAAa,GAAGL,QAAQ,CAACE,SAAT,CAAmB,EAAnB,EAAuB,EAAvB,CAAtB;AAEA,aAAOD,GAAG,GAAE,GAAL,GAAUE,KAAV,GAAiB,GAAjB,GAAsBC,IAAtB,GAA4B,MAA5B,GAAoCC,KAApC,GAA4C,GAAnD;AACH;AAlCL;AAAA;AAAA,6BAoC+B;AACvB,aACI,oBAAC,kBAAD;AAAoB,QAAA,WAAW,EAAE,KAAK1B,KAAL,CAAWC,WAA5C;AAAyD,QAAA,OAAO,EAAE,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AAxCL;;AAAA;AAAA,EAA0CR,SAA1C","sourcesContent":["import React, { Component, ReactNode } from 'react';\n\nimport api from '../../utils/connection.api';\nimport userSession from '../../storage/user.session';\nimport HTTP from '../../utils/http.codes';\n\nimport { SalesOrder } from '../../model/sales.order';\nimport { SalesOrderListView } from './view';\n\ntype State = { salesOrders: SalesOrder[] };\n\nexport class SalesOrderListScreen extends Component<any, State> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = { salesOrders: [] };\n        this.updateList();\n    }\n\n    private updateList(): void {\n        userSession.getToken().then((token: string) => {\n            api.getSalesOrderList(token).then((result: any) => {\n                if (result.status === HTTP.BAD_REQUEST) {\n                    alert(\"You must login as a Customer to do the purchasing!\");\n                    this.props.navigation.navigate('Login');\n                } else if (result.status === HTTP.FORBIDDEN) {\n                    alert(\"Validation failure, You are not logged!\");\n                    this.props.navigation.navigate('Login');\n                } else if (result.status === HTTP.OK) {\n                    this.setState({ salesOrders: result.data });\n                    console.log(\"The sales orders are here: \"+ result.data);\n                } else {\n                    alert(\"Erro ao buscar os pedidos: \"+JSON.stringify(result.data));\n                }\n            });\n        });\n    }\n\n    public formatDate(dateText: string): string {\n        const day: string = dateText.substring(8, 10);\n        const month: string = dateText.substring(5, 7);\n        const year: string = dateText.substring(0, 4);\n        const hours: string = dateText.substring(11, 16);\n        \n        return day +\"/\"+ month +\"/\"+ year +\" às \"+ hours + \"h\";\n    }\n\n    public render(): ReactNode {\n        return (\n            <SalesOrderListView salesOrders={this.state.salesOrders} actions={this} />\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}