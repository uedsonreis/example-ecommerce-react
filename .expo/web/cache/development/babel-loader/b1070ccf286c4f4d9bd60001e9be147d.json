{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/login/view.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Content, List, ListItem, Button, Text, Label, Container, Segment, Input } from \"native-base\";\nimport styles from \"./styles\";\nexport var AuthScreenView = function (_Component) {\n  _inherits(AuthScreenView, _Component);\n\n  var _super = _createSuper(AuthScreenView);\n\n  function AuthScreenView(props) {\n    var _this;\n\n    _classCallCheck(this, AuthScreenView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      segmentA: true,\n      segmentB: false\n    };\n    return _this;\n  }\n\n  _createClass(AuthScreenView, [{\n    key: \"changeActiveSegment\",\n    value: function changeActiveSegment() {\n      this.setState({\n        segmentA: !this.state.segmentA,\n        segmentB: !this.state.segmentB\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          customer = _this$props.customer,\n          actions = _this$props.actions;\n\n      if (this.state.segmentA) {\n        return React.createElement(LoginScreenView, {\n          user: user,\n          actions: actions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 22\n          }\n        });\n      } else {\n        return React.createElement(RegisterScreenView, {\n          user: user,\n          customer: customer,\n          actions: actions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        first: true,\n        active: this.state.segmentA,\n        onPress: function onPress() {\n          return _this2.changeActiveSegment();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, \"Entrar\")), React.createElement(Button, {\n        last: true,\n        active: this.state.segmentB,\n        onPress: function onPress() {\n          return _this2.changeActiveSegment();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \"Registrar\"))), this.renderContent());\n    }\n  }]);\n\n  return AuthScreenView;\n}(Component);\nexport var LoginScreenView = function (_Component2) {\n  _inherits(LoginScreenView, _Component2);\n\n  var _super2 = _createSuper(LoginScreenView);\n\n  function LoginScreenView() {\n    _classCallCheck(this, LoginScreenView);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(LoginScreenView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          user = _this$props2.user,\n          actions = _this$props2.actions;\n      return React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }\n      }, \" Email: \")), React.createElement(Input, {\n        onChangeText: function onChangeText(text) {\n          return user.login = text;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      })), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 32\n        }\n      }, \" Senha: \")), React.createElement(Input, {\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return user.password = text;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }))), React.createElement(Button, {\n        onPress: function onPress() {\n          return actions.login();\n        },\n        style: styles.loginButton,\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"Entrar\")));\n    }\n  }]);\n\n  return LoginScreenView;\n}(Component);\nexport var RegisterScreenView = function (_Component3) {\n  _inherits(RegisterScreenView, _Component3);\n\n  var _super3 = _createSuper(RegisterScreenView);\n\n  function RegisterScreenView() {\n    _classCallCheck(this, RegisterScreenView);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(RegisterScreenView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          user = _this$props3.user,\n          customer = _this$props3.customer,\n          actions = _this$props3.actions;\n      return React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 32\n        }\n      }, \" Email: \")), React.createElement(Input, {\n        onChangeText: function onChangeText(text) {\n          return user.login = text;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      })), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 32\n        }\n      }, \" Senha: \")), React.createElement(Input, {\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return user.password = text;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      })), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 32\n        }\n      }, \" Confirmar Senha: \")), React.createElement(Input, {\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return actions.setState({\n            confirmPass: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      })), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 32\n        }\n      }, \" Nome: \")), React.createElement(Input, {\n        onChangeText: function onChangeText(text) {\n          return customer.name = text;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      })), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 32\n        }\n      }, \" Idade: \")), React.createElement(Input, {\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(age) {\n          return customer.age = Number(age);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      })), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 32\n        }\n      }, \" Endere\\xE7o: \")), React.createElement(Input, {\n        onChangeText: function onChangeText(text) {\n          return customer.address = text;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }))), React.createElement(Button, {\n        onPress: function onPress() {\n          return actions.signup();\n        },\n        style: styles.loginButton,\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, \"Registrar\")));\n    }\n  }]);\n\n  return RegisterScreenView;\n}(Component);","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/aulas/example-ecommerce-react/src/screens/login/view.tsx"],"names":["React","Component","Content","List","ListItem","Button","Text","Label","Container","Segment","Input","styles","AuthScreenView","props","state","segmentA","segmentB","setState","user","customer","actions","changeActiveSegment","renderContent","LoginScreenView","text","login","password","loginButton","RegisterScreenView","confirmPass","name","age","Number","address","signup"],"mappings":"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","sourcesContent":["import React, { Component, ReactNode } from \"react\";\nimport { Content, List, ListItem, Button, Text, Label, Container, Segment, Input } from \"native-base\";\n\nimport styles from \"./styles\";\nimport { User } from \"../../model/user\";\nimport { Customer } from \"../../model/customer\";\n\ntype AuthProps = { user: User, customer: Customer, actions: any };\ntype State = { segmentA: boolean, segmentB: boolean };\n\nexport class AuthScreenView extends Component<AuthProps, State> {\n\n    constructor(props: AuthProps) {\n        super(props);\n\n        this.state = { segmentA: true, segmentB: false };\n    }\n\n    private changeActiveSegment(): void {\n        this.setState({ segmentA: !this.state.segmentA, segmentB: !this.state.segmentB });\n    }\n\n    private renderContent(): ReactNode {\n        const { user, customer, actions } = this.props;\n\n        if (this.state.segmentA) {\n            return ( <LoginScreenView user={user} actions={actions} /> );\n        } else {\n            return ( <RegisterScreenView user={user} customer={customer} actions={actions} /> );\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <Container>\n                <Segment>\n                    <Button first active={this.state.segmentA} onPress={() => this.changeActiveSegment()}>\n                        <Text>Entrar</Text>\n                    </Button>\n                    <Button last active={this.state.segmentB} onPress={() => this.changeActiveSegment()}>\n                        <Text>Registrar</Text>\n                    </Button>\n                </Segment>\n                {this.renderContent()}\n            </Container>\n        );\n    }\n}\n\ntype LoginProps = { user: User, actions: any };\n\nexport class LoginScreenView extends Component<LoginProps, any> {\n    public render(): ReactNode {\n        const { user, actions } = this.props;\n        return (\n            <Content>\n                <List>\n                    <ListItem>\n                        <Label><Text> Email: </Text></Label>\n                        <Input onChangeText={text => user.login = text} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Senha: </Text></Label>\n                        <Input secureTextEntry={true} onChangeText={text => user.password = text} />\n                    </ListItem>\n                </List>\n    \n                <Button onPress={() => actions.login()} style={styles.loginButton} block>\n                    <Text>Entrar</Text>\n                </Button>\n            </Content>\n        );\n    }\n}\n\ntype RegisterProps = { user: User, customer: Customer, actions: any };\n\nexport class RegisterScreenView extends Component<RegisterProps, any> {\n    public render(): ReactNode {\n        const { user, customer, actions } = this.props;\n        return (\n            <Content>\n                <List>\n                    <ListItem>\n                        <Label><Text> Email: </Text></Label>\n                        <Input onChangeText={text => user.login = text} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Senha: </Text></Label>\n                        <Input secureTextEntry={true} onChangeText={text => user.password = text} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Confirmar Senha: </Text></Label>\n                        <Input secureTextEntry={true} onChangeText={text => actions.setState({ confirmPass: text}) } />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Nome: </Text></Label>\n                        <Input onChangeText={text => customer.name = text} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Idade: </Text></Label>\n                        <Input keyboardType={'numeric'} onChangeText={age => customer.age = Number(age)} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Endereço: </Text></Label>\n                        <Input onChangeText={text => customer.address = text} />\n                    </ListItem>\n                </List>\n    \n                <Button onPress={() => actions.signup()} style={styles.loginButton} block>\n                    <Text>Registrar</Text>\n                </Button>\n            </Content>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}