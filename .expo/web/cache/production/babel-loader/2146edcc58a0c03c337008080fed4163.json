{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-drawer/src/views/DrawerNavigatorItems.tsx\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{SafeAreaView,ThemeContext}from'react-navigation';import TouchableItem from\"./TouchableItem\";var DrawerNavigatorItems=function(_React$Component){_inherits(DrawerNavigatorItems,_React$Component);function DrawerNavigatorItems(){_classCallCheck(this,DrawerNavigatorItems);return _possibleConstructorReturn(this,_getPrototypeOf(DrawerNavigatorItems).apply(this,arguments));}_createClass(DrawerNavigatorItems,[{key:\"getActiveTintColor\",value:function getActiveTintColor(){var activeTintColor=this.props.activeTintColor;if(!activeTintColor){return;}else if(typeof activeTintColor==='string'){return activeTintColor;}return activeTintColor[this.context];}},{key:\"getInactiveTintColor\",value:function getInactiveTintColor(){var inactiveTintColor=this.props.inactiveTintColor;if(!inactiveTintColor){return;}else if(typeof inactiveTintColor==='string'){return inactiveTintColor;}return inactiveTintColor[this.context];}},{key:\"getActiveBackgroundColor\",value:function getActiveBackgroundColor(){var activeBackgroundColor=this.props.activeBackgroundColor;if(!activeBackgroundColor){return;}else if(typeof activeBackgroundColor==='string'){return activeBackgroundColor;}return activeBackgroundColor[this.context];}},{key:\"getInactiveBackgroundColor\",value:function getInactiveBackgroundColor(){var inactiveBackgroundColor=this.props.inactiveBackgroundColor;if(!inactiveBackgroundColor){return;}else if(typeof inactiveBackgroundColor==='string'){return inactiveBackgroundColor;}return inactiveBackgroundColor[this.context];}},{key:\"render\",value:function render(){var _this$props=this.props,items=_this$props.items,activeItemKey=_this$props.activeItemKey,getLabel=_this$props.getLabel,renderIcon=_this$props.renderIcon,onItemPress=_this$props.onItemPress,itemsContainerStyle=_this$props.itemsContainerStyle,itemStyle=_this$props.itemStyle,labelStyle=_this$props.labelStyle,activeLabelStyle=_this$props.activeLabelStyle,inactiveLabelStyle=_this$props.inactiveLabelStyle,iconContainerStyle=_this$props.iconContainerStyle,drawerPosition=_this$props.drawerPosition;var activeTintColor=this.getActiveTintColor();var activeBackgroundColor=this.getActiveBackgroundColor();var inactiveTintColor=this.getInactiveTintColor();var inactiveBackgroundColor=this.getInactiveBackgroundColor();return React.createElement(View,{style:[styles.container,itemsContainerStyle],__source:{fileName:_jsxFileName,lineNumber:102}},items.map(function(route,index){var _ref;var focused=activeItemKey===route.key;var color=focused?activeTintColor:inactiveTintColor;var backgroundColor=focused?activeBackgroundColor:inactiveBackgroundColor;var scene={route:route,index:index,focused:focused,tintColor:color};var icon=renderIcon(scene);var label=getLabel(scene);var accessibilityLabel=typeof label==='string'?label:undefined;var extraLabelStyle=focused?activeLabelStyle:inactiveLabelStyle;return React.createElement(TouchableItem,{key:route.key,accessible:true,accessibilityLabel:accessibilityLabel,onPress:function onPress(){onItemPress({route:route,focused:focused});},delayPressIn:0,__source:{fileName:_jsxFileName,lineNumber:118}},React.createElement(SafeAreaView,{style:[{backgroundColor:backgroundColor},styles.item,itemStyle],forceInset:(_ref={},_defineProperty(_ref,drawerPosition,'always'),_defineProperty(_ref,drawerPosition==='left'?'right':'left','never'),_defineProperty(_ref,\"vertical\",'never'),_ref),__source:{fileName:_jsxFileName,lineNumber:127}},icon?React.createElement(View,{style:[styles.icon,focused?null:styles.inactiveIcon,iconContainerStyle],__source:{fileName:_jsxFileName,lineNumber:136}},icon):null,typeof label==='string'?React.createElement(Text,{style:[styles.label,{color:color},labelStyle,extraLabelStyle],__source:{fileName:_jsxFileName,lineNumber:147}},label):label));}));}}]);return DrawerNavigatorItems;}(React.Component);DrawerNavigatorItems.defaultProps={activeTintColor:{light:'#2196f3',dark:'#fff'},activeBackgroundColor:{light:'rgba(0, 0, 0, .04)',dark:'rgba(255, 255, 255, .04)'},inactiveTintColor:{light:'rgba(0, 0, 0, .87)',dark:'rgba(255, 255, 255, .87)'},inactiveBackgroundColor:{light:'transparent',dark:'transparent'}};DrawerNavigatorItems.contextType=ThemeContext;export{DrawerNavigatorItems as default};var styles=StyleSheet.create({container:{paddingVertical:4},item:{flexDirection:'row',alignItems:'center'},icon:{marginHorizontal:16,width:24,alignItems:'center'},inactiveIcon:{opacity:0.62},label:{margin:16,fontWeight:'bold'}});","map":{"version":3,"sources":["DrawerNavigatorItems.tsx"],"names":["DrawerNavigatorItems","React","Component","defaultProps","activeTintColor","light","dark","activeBackgroundColor","inactiveTintColor","inactiveBackgroundColor","contextType","ThemeContext","items","activeItemKey","getLabel","renderIcon","onItemPress","itemsContainerStyle","itemStyle","labelStyle","activeLabelStyle","inactiveLabelStyle","iconContainerStyle","drawerPosition","styles","focused","route","color","backgroundColor","scene","index","tintColor","icon","label","accessibilityLabel","extraLabelStyle","StyleSheet","container","paddingVertical","item","flexDirection","alignItems","marginHorizontal","width","inactiveIcon","opacity","margin","fontWeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { SafeAreaView, ThemeContext } from 'react-navigation';\nimport TouchableItem from './TouchableItem';\nimport { DrawerNavigatorItemsProps } from '../types';\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nexport default class DrawerNavigatorItems extends React.Component<\n  DrawerNavigatorItemsProps\n> {\n  /* Material design specs - https://material.io/guidelines/patterns/navigation-drawer.html#navigation-drawer-specs */\n  static defaultProps = {\n    activeTintColor: {\n      light: '#2196f3',\n      dark: '#fff',\n    },\n    activeBackgroundColor: {\n      light: 'rgba(0, 0, 0, .04)',\n      dark: 'rgba(255, 255, 255, .04)',\n    },\n    inactiveTintColor: {\n      light: 'rgba(0, 0, 0, .87)',\n      dark: 'rgba(255, 255, 255, .87)',\n    },\n    inactiveBackgroundColor: {\n      light: 'transparent',\n      dark: 'transparent',\n    },\n  };\n\n  static contextType = ThemeContext;\n  context!: React.ContextType<typeof ThemeContext>;\n\n  private getActiveTintColor() {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  }\n\n  private getInactiveTintColor() {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  }\n\n  private getActiveBackgroundColor() {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  }\n\n  private getInactiveBackgroundColor() {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  }\n\n  render() {\n    const {\n      items,\n      activeItemKey,\n      getLabel,\n      renderIcon,\n      onItemPress,\n      itemsContainerStyle,\n      itemStyle,\n      labelStyle,\n      activeLabelStyle,\n      inactiveLabelStyle,\n      iconContainerStyle,\n      drawerPosition,\n    } = this.props;\n\n    const activeTintColor = this.getActiveTintColor();\n    const activeBackgroundColor = this.getActiveBackgroundColor();\n    const inactiveTintColor = this.getInactiveTintColor();\n    const inactiveBackgroundColor = this.getInactiveBackgroundColor();\n\n    return (\n      <View style={[styles.container, itemsContainerStyle]}>\n        {items.map((route, index: number) => {\n          const focused = activeItemKey === route.key;\n          const color = focused ? activeTintColor : inactiveTintColor;\n          const backgroundColor = focused\n            ? activeBackgroundColor\n            : inactiveBackgroundColor;\n          const scene = { route, index, focused, tintColor: color };\n          const icon = renderIcon(scene);\n          const label = getLabel(scene);\n          const accessibilityLabel =\n            typeof label === 'string' ? label : undefined;\n          const extraLabelStyle = focused\n            ? activeLabelStyle\n            : inactiveLabelStyle;\n          return (\n            <TouchableItem\n              key={route.key}\n              accessible\n              accessibilityLabel={accessibilityLabel}\n              onPress={() => {\n                onItemPress({ route, focused });\n              }}\n              delayPressIn={0}\n            >\n              <SafeAreaView\n                style={[{ backgroundColor }, styles.item, itemStyle]}\n                forceInset={{\n                  [drawerPosition]: 'always',\n                  [drawerPosition === 'left' ? 'right' : 'left']: 'never',\n                  vertical: 'never',\n                }}\n              >\n                {icon ? (\n                  <View\n                    style={[\n                      styles.icon,\n                      focused ? null : styles.inactiveIcon,\n                      iconContainerStyle,\n                    ]}\n                  >\n                    {icon}\n                  </View>\n                ) : null}\n                {typeof label === 'string' ? (\n                  <Text\n                    style={[\n                      styles.label,\n                      { color },\n                      labelStyle,\n                      extraLabelStyle,\n                    ]}\n                  >\n                    {label}\n                  </Text>\n                ) : (\n                  label\n                )}\n              </SafeAreaView>\n            </TouchableItem>\n          );\n        })}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginHorizontal: 16,\n    width: 24,\n    alignItems: 'center',\n  },\n  inactiveIcon: {\n    /*\n     * Icons have 0.54 opacity according to guidelines\n     * 100/87 * 54 ~= 62\n     */\n    opacity: 0.62,\n  },\n  label: {\n    margin: 16,\n    fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}