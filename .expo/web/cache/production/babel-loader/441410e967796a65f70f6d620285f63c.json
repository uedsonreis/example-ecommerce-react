{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-tabs/src/views/CrossFadeIcon.tsx\";import React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from'react-native-reanimated';var TabBarIcon=function(_React$Component){_inherits(TabBarIcon,_React$Component);function TabBarIcon(){_classCallCheck(this,TabBarIcon);return _possibleConstructorReturn(this,_getPrototypeOf(TabBarIcon).apply(this,arguments));}_createClass(TabBarIcon,[{key:\"render\",value:function render(){var _this$props=this.props,route=_this$props.route,activeOpacity=_this$props.activeOpacity,inactiveOpacity=_this$props.inactiveOpacity,activeTintColor=_this$props.activeTintColor,inactiveTintColor=_this$props.inactiveTintColor,renderIcon=_this$props.renderIcon,horizontal=_this$props.horizontal,style=_this$props.style;return React.createElement(View,{style:style,__source:{fileName:_jsxFileName,lineNumber:38}},React.createElement(Animated.View,{style:[styles.icon,{opacity:activeOpacity}],__source:{fileName:_jsxFileName,lineNumber:39}},renderIcon({route:route,focused:true,horizontal:horizontal,tintColor:activeTintColor})),React.createElement(Animated.View,{style:[styles.icon,{opacity:inactiveOpacity}],__source:{fileName:_jsxFileName,lineNumber:47}},renderIcon({route:route,focused:false,horizontal:horizontal,tintColor:inactiveTintColor})));}}]);return TabBarIcon;}(React.Component);export{TabBarIcon as default};var styles=StyleSheet.create({icon:{position:'absolute',alignSelf:'center',alignItems:'center',justifyContent:'center',height:'100%',width:'100%',minWidth:25}});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["TabBarIcon","React","Component","route","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","horizontal","style","styles","opacity","focused","tintColor","StyleSheet","icon","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":"ybAAA,MAAA,CAAA,KAAA,KAAA,OAAA,C,sHAEA,MAAA,CAAA,QAAA,KAAA,yBAAA,CAmBqBA,GAAAA,CAAAA,U,mRACV,CAAA,GAAA,CAAA,WAAA,CAUH,KAVG,KAAA,CAELG,KAFK,CAAA,WAAA,CAAA,KAAA,CAGLC,aAHK,CAAA,WAAA,CAAA,aAAA,CAILC,eAJK,CAAA,WAAA,CAAA,eAAA,CAKLC,eALK,CAAA,WAAA,CAAA,eAAA,CAMLC,iBANK,CAAA,WAAA,CAAA,iBAAA,CAOLC,UAPK,CAAA,WAAA,CAAA,UAAA,CAQLC,UARK,CAAA,WAAA,CAAA,UAAA,CASLC,KATK,CAAA,WAAA,CAAA,KAAA,CAcP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAX,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,CAAe,KAAK,CAAE,CAACC,MAAM,CAAP,IAAA,CAAc,CAAEC,OAAO,CAA7C,aAAoC,CAAd,CAAtB,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACGJ,UAAU,CAAC,CACVL,KAAK,CADK,KAAA,CAEVU,OAAO,CAFG,IAAA,CAGVJ,UAAU,CAHA,UAAA,CAIVK,SAAS,CANf,eAEgB,CAAD,CADb,CADF,CASE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,CAAe,KAAK,CAAE,CAACH,MAAM,CAAP,IAAA,CAAc,CAAEC,OAAO,CAA7C,eAAoC,CAAd,CAAtB,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACGJ,UAAU,CAAC,CACVL,KAAK,CADK,KAAA,CAEVU,OAAO,CAFG,KAAA,CAGVJ,UAAU,CAHA,UAAA,CAIVK,SAAS,CAfjB,iBAWkB,CAAD,CADb,CATF,CADF,C,yBAfoCb,KAAK,CAACC,S,CAAzBF,C,OAAAA,U,aAsCrB,GAAMW,CAAAA,MAAM,CAAGI,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,IAAI,CAAE,CAIJC,QAAQ,CAJJ,UAAA,CAKJC,SAAS,CALL,QAAA,CAMJC,UAAU,CANN,QAAA,CAOJC,cAAc,CAPV,QAAA,CAQJC,MAAM,CARF,MAAA,CASJC,KAAK,CATD,MAAA,CAWJC,QAAQ,CAZZ,EACQ,CADyB,CAAlBR,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { NavigationRoute } from 'react-navigation';\n\ntype Props = {\n  route: NavigationRoute;\n  horizontal?: boolean;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n  renderIcon: (props: {\n    route: NavigationRoute;\n    focused: boolean;\n    tintColor?: string;\n    horizontal?: boolean;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default class TabBarIcon extends React.Component<Props> {\n  render() {\n    const {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style,\n    } = this.props;\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return (\n      <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {renderIcon({\n            route,\n            focused: true,\n            horizontal,\n            tintColor: activeTintColor,\n          })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {renderIcon({\n            route,\n            focused: false,\n            horizontal,\n            tintColor: inactiveTintColor,\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}