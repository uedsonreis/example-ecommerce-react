{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-tabs/src/navigators/createBottomTabNavigator.tsx\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{ScreenContainer}from'react-native-screens';import createTabNavigator from\"../utils/createTabNavigator\";import BottomTabBar from\"../views/BottomTabBar\";import ResourceSavingScene from\"../views/ResourceSavingScene\";var TabNavigationView=function(_React$PureComponent){_inherits(TabNavigationView,_React$PureComponent);function TabNavigationView(){var _getPrototypeOf2;var _this;_classCallCheck(this,TabNavigationView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TabNavigationView)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={loaded:[_this.props.navigation.state.index]};_this._getButtonComponent=function(_ref){var route=_ref.route;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;if(options.tabBarButtonComponent){return options.tabBarButtonComponent;}return undefined;};_this._renderTabBar=function(){var _this$props=_this.props,_this$props$tabBarCom=_this$props.tabBarComponent,TabBarComponent=_this$props$tabBarCom===void 0?BottomTabBar:_this$props$tabBarCom,tabBarOptions=_this$props.tabBarOptions,navigation=_this$props.navigation,screenProps=_this$props.screenProps,getLabelText=_this$props.getLabelText,getAccessibilityLabel=_this$props.getAccessibilityLabel,getAccessibilityRole=_this$props.getAccessibilityRole,getAccessibilityStates=_this$props.getAccessibilityStates,getTestID=_this$props.getTestID,renderIcon=_this$props.renderIcon,onTabPress=_this$props.onTabPress,onTabLongPress=_this$props.onTabLongPress;var descriptors=_this.props.descriptors;var state=_this.props.navigation.state;var route=state.routes[state.index];var descriptor=descriptors[route.key];var options=descriptor.options;if(options.tabBarVisible===false){return null;}return React.createElement(TabBarComponent,_extends({},tabBarOptions,{jumpTo:_this._jumpTo,navigation:navigation,screenProps:screenProps,onTabPress:onTabPress,onTabLongPress:onTabLongPress,getLabelText:getLabelText,getButtonComponent:_this._getButtonComponent,getAccessibilityLabel:getAccessibilityLabel,getAccessibilityRole:getAccessibilityRole,getAccessibilityStates:getAccessibilityStates,getTestID:getTestID,renderIcon:renderIcon,__source:{fileName:_jsxFileName,lineNumber:114}}));};_this._jumpTo=function(key){var _this$props2=_this.props,navigation=_this$props2.navigation,onIndexChange=_this$props2.onIndexChange;var index=navigation.state.routes.findIndex(function(route){return route.key===key;});onIndexChange(index);};return _this;}_createClass(TabNavigationView,[{key:\"render\",value:function render(){var _this$props3=this.props,navigation=_this$props3.navigation,renderScene=_this$props3.renderScene,lazy=_this$props3.lazy;var routes=navigation.state.routes;var loaded=this.state.loaded;return React.createElement(View,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:146}},React.createElement(ScreenContainer,{style:styles.pages,__source:{fileName:_jsxFileName,lineNumber:147}},routes.map(function(route,index){if(lazy&&!loaded.includes(index)){return null;}var isFocused=navigation.state.index===index;return React.createElement(ResourceSavingScene,{key:route.key,style:StyleSheet.absoluteFill,isVisible:isFocused,__source:{fileName:_jsxFileName,lineNumber:157}},renderScene({route:route}));})),this._renderTabBar());}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){var index=nextProps.navigation.state.index;return{loaded:prevState.loaded.includes(index)?prevState.loaded:[].concat(_toConsumableArray(prevState.loaded),[index])};}}]);return TabNavigationView;}(React.PureComponent);TabNavigationView.defaultProps={lazy:true,getAccessibilityRole:function getAccessibilityRole(){return'button';},getAccessibilityStates:function getAccessibilityStates(_ref2){var focused=_ref2.focused;return focused?['selected']:[];}};var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},pages:{flex:1}});export default createTabNavigator(TabNavigationView);","map":{"version":3,"sources":["createBottomTabNavigator.tsx"],"names":["TabNavigationView","React","PureComponent","defaultProps","lazy","getAccessibilityRole","getAccessibilityStates","focused","nextProps","prevState","index","loaded","state","_getButtonComponent","route","descriptors","descriptor","options","_renderTabBar","TabBarComponent","tabBarOptions","navigation","screenProps","getLabelText","getAccessibilityLabel","getTestID","renderIcon","onTabPress","onTabLongPress","_jumpTo","onIndexChange","renderScene","routes","styles","isFocused","StyleSheet","container","flex","overflow","pages","createTabNavigator"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  AccessibilityRole,\n  AccessibilityState,\n} from 'react-native';\nimport { NavigationRoute } from 'react-navigation';\n\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer } from 'react-native-screens';\n\nimport createTabNavigator, {\n  NavigationViewProps,\n} from '../utils/createTabNavigator';\nimport BottomTabBar from '../views/BottomTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\nimport {\n  NavigationTabProp,\n  NavigationBottomTabOptions,\n  BottomTabBarOptions,\n  SceneDescriptorMap,\n} from '../types';\n\ntype Config = {\n  lazy?: boolean;\n  tabBarComponent?: React.ComponentType<any>;\n  tabBarOptions?: BottomTabBarOptions;\n};\n\ntype Props = NavigationViewProps &\n  Config & {\n    getAccessibilityRole: (props: {\n      route: NavigationRoute;\n    }) => AccessibilityRole | undefined;\n    getAccessibilityStates: (props: {\n      route: NavigationRoute;\n      focused: boolean;\n    }) => AccessibilityState[];\n    navigation: NavigationTabProp;\n    descriptors: SceneDescriptorMap;\n    screenProps?: unknown;\n  };\n\ntype State = {\n  loaded: number[];\n};\n\nclass TabNavigationView extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    lazy: true,\n    getAccessibilityRole: (): AccessibilityRole => 'button',\n    getAccessibilityStates: ({\n      focused,\n    }: {\n      focused: boolean;\n    }): AccessibilityState[] => (focused ? ['selected'] : []),\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const { index } = nextProps.navigation.state;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(index)\n        ? prevState.loaded\n        : [...prevState.loaded, index],\n    };\n  }\n\n  state = {\n    loaded: [this.props.navigation.state.index],\n  };\n\n  _getButtonComponent = ({ route }: { route: NavigationRoute }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarButtonComponent) {\n      return options.tabBarButtonComponent;\n    }\n\n    return undefined;\n  };\n\n  _renderTabBar = () => {\n    const {\n      tabBarComponent: TabBarComponent = BottomTabBar,\n      tabBarOptions,\n      navigation,\n      screenProps,\n      getLabelText,\n      getAccessibilityLabel,\n      getAccessibilityRole,\n      getAccessibilityStates,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n    } = this.props;\n\n    const { descriptors } = this.props;\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarVisible === false) {\n      return null;\n    }\n\n    return (\n      <TabBarComponent\n        {...tabBarOptions}\n        jumpTo={this._jumpTo}\n        navigation={navigation}\n        screenProps={screenProps}\n        onTabPress={onTabPress}\n        onTabLongPress={onTabLongPress}\n        getLabelText={getLabelText}\n        getButtonComponent={this._getButtonComponent}\n        getAccessibilityLabel={getAccessibilityLabel}\n        getAccessibilityRole={getAccessibilityRole}\n        getAccessibilityStates={getAccessibilityStates}\n        getTestID={getTestID}\n        renderIcon={renderIcon}\n      />\n    );\n  };\n\n  _jumpTo = (key: string) => {\n    const { navigation, onIndexChange } = this.props;\n\n    const index = navigation.state.routes.findIndex(route => route.key === key);\n\n    onIndexChange(index);\n  };\n\n  render() {\n    const { navigation, renderScene, lazy } = this.props;\n    const { routes } = navigation.state;\n    const { loaded } = this.state;\n\n    return (\n      <View style={styles.container}>\n        <ScreenContainer style={styles.pages}>\n          {routes.map((route, index) => {\n            if (lazy && !loaded.includes(index)) {\n              // Don't render a screen if we've never navigated to it\n              return null;\n            }\n\n            const isFocused = navigation.state.index === index;\n\n            return (\n              <ResourceSavingScene\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                isVisible={isFocused}\n              >\n                {renderScene({ route })}\n              </ResourceSavingScene>\n            );\n          })}\n        </ScreenContainer>\n        {this._renderTabBar()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  pages: {\n    flex: 1,\n  },\n});\n\nexport default createTabNavigator<Config, NavigationBottomTabOptions, Props>(\n  TabNavigationView\n);\n"]},"metadata":{},"sourceType":"module"}