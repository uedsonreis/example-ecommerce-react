{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import React from'react';import{createStackNavigator}from'react-navigation-stack';import{createBottomTabNavigator}from'react-navigation-tabs';import{CatalogScreen}from\"../../screens/catalog\";import{CartScreen}from\"../../screens/cart\";import Platform from\"react-native-web/dist/exports/Platform\";import{TabBarIcon}from\"../tab-bar-icon\";import{ProductScreen}from\"../../screens/product\";var TabNavigatorFactory=function(){function TabNavigatorFactory(){_classCallCheck(this,TabNavigatorFactory);this.config=Platform.select({web:{headerMode:'screen'},default:{}});}_createClass(TabNavigatorFactory,[{key:\"createCatalogStack\",value:function createCatalogStack(){var stack=createStackNavigator({Catalog:CatalogScreen,Pickup:ProductScreen},this.config);stack.navigationOptions={tabBarLabel:'Catálogo',tabBarIcon:function tabBarIcon(_ref){var focused=_ref.focused;var name=Platform.OS==='ios'?'ios-list':'md-list';return React.createElement(TabBarIcon,{name:name,focused:focused});}};stack.path=\"\";return stack;}},{key:\"createCartStack\",value:function createCartStack(){var stack=createStackNavigator({Cart:CartScreen},this.config);stack.navigationOptions={tabBarLabel:'Carrinho',tabBarIcon:function tabBarIcon(_ref2){var focused=_ref2.focused;var name=Platform.OS==='ios'?'ios-cart':'md-cart';return React.createElement(TabBarIcon,{name:name,focused:focused});}};stack.path=\"\";return stack;}},{key:\"createTabNavigator\",value:function createTabNavigator(){var tabNavigator=createBottomTabNavigator({catalogStack:this.createCatalogStack(),cartStack:this.createCartStack()});tabNavigator.path=\"\";return tabNavigator;}}]);return TabNavigatorFactory;}();var factory=new TabNavigatorFactory();export default factory.createTabNavigator();","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/example-ecommerce-react/src/components/navigator/index.tsx"],"names":["React","createStackNavigator","createBottomTabNavigator","CatalogScreen","CartScreen","TabBarIcon","ProductScreen","TabNavigatorFactory","config","Platform","select","web","headerMode","default","stack","Catalog","Pickup","navigationOptions","tabBarLabel","tabBarIcon","focused","name","OS","path","Cart","tabNavigator","catalogStack","createCatalogStack","cartStack","createCartStack","factory","createTabNavigator"],"mappings":"gIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,oBAAT,KAAqC,wBAArC,CACA,OAASC,wBAAT,KAAyC,uBAAzC,CAEA,OAASC,aAAT,6BACA,OAASC,UAAT,0B,6DAEA,OAASC,UAAT,uBACA,OAASC,aAAT,6B,GAEMC,CAAAA,mB,0FAEeC,M,CAAcC,QAAQ,CAACC,MAAT,CAAgB,CAC3CC,GAAG,CAAE,CAAEC,UAAU,CAAE,QAAd,CADsC,CAE3CC,OAAO,CAAE,EAFkC,CAAhB,C,iGAKG,CAC9B,GAAMC,CAAAA,KAAU,CAAGb,oBAAoB,CACnC,CAAEc,OAAO,CAAEZ,aAAX,CAA0Ba,MAAM,CAAEV,aAAlC,CADmC,CAEnC,KAAKE,MAF8B,CAAvC,CAKAM,KAAK,CAACG,iBAAN,CAA0B,CACtBC,WAAW,CAAE,UADS,CAEtBC,UAAU,CAAE,yBAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACzB,GAAMC,CAAAA,IAAY,CAAGZ,QAAQ,CAACa,EAAT,GAAgB,KAAhB,CAAwB,UAAxB,CAAqC,SAA1D,CACA,MAAO,qBAAC,UAAD,EAAY,IAAI,CAAED,IAAlB,CAAwB,OAAO,CAAED,OAAjC,EAAP,CACH,CALqB,CAA1B,CAQAN,KAAK,CAACS,IAAN,CAAa,EAAb,CACA,MAAOT,CAAAA,KAAP,CACH,C,yDAE8B,CAC3B,GAAMA,CAAAA,KAAU,CAAGb,oBAAoB,CAAC,CAAEuB,IAAI,CAAEpB,UAAR,CAAD,CAAuB,KAAKI,MAA5B,CAAvC,CAEAM,KAAK,CAACG,iBAAN,CAA0B,CACtBC,WAAW,CAAE,UADS,CAEtBC,UAAU,CAAE,0BAAiB,IAAdC,CAAAA,OAAc,OAAdA,OAAc,CACzB,GAAMC,CAAAA,IAAY,CAAGZ,QAAQ,CAACa,EAAT,GAAgB,KAAhB,CAAwB,UAAxB,CAAqC,SAA1D,CACA,MAAO,qBAAC,UAAD,EAAY,IAAI,CAAED,IAAlB,CAAwB,OAAO,CAAED,OAAjC,EAAP,CACH,CALqB,CAA1B,CAQAN,KAAK,CAACS,IAAN,CAAa,EAAb,CACA,MAAOT,CAAAA,KAAP,CACH,C,+DAEgC,CAC7B,GAAMW,CAAAA,YAAiB,CAAGvB,wBAAwB,CAAC,CAC/CwB,YAAY,CAAE,KAAKC,kBAAL,EADiC,CAE/CC,SAAS,CAAE,KAAKC,eAAL,EAFoC,CAAD,CAAlD,CAKAJ,YAAY,CAACF,IAAb,CAAoB,EAApB,CACA,MAAOE,CAAAA,YAAP,CACH,C,mCAGL,GAAMK,CAAAA,OAA4B,CAAG,GAAIvB,CAAAA,mBAAJ,EAArC,CACA,cAAeuB,CAAAA,OAAO,CAACC,kBAAR,EAAf","sourcesContent":["import React from 'react';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\n\nimport { CatalogScreen } from '../../screens/catalog';\nimport { CartScreen } from '../../screens/cart';\nimport { Platform } from 'react-native';\nimport { TabBarIcon } from '../tab-bar-icon';\nimport { ProductScreen } from '../../screens/product';\n\nclass TabNavigatorFactory {\n\n    private readonly config: any = Platform.select({\n        web: { headerMode: 'screen' },\n        default: {},\n    });\n\n    private createCatalogStack(): any {\n        const stack: any = createStackNavigator(\n            { Catalog: CatalogScreen, Pickup: ProductScreen },\n            this.config\n        );\n\n        stack.navigationOptions = {\n            tabBarLabel: 'Catálogo',\n            tabBarIcon: ({ focused }) => {\n                const name: string = Platform.OS === 'ios' ? 'ios-list' : 'md-list';\n                return <TabBarIcon name={name} focused={focused} />;\n            },\n        };\n\n        stack.path = \"\";\n        return stack;\n    }\n\n    private createCartStack(): any {\n        const stack: any = createStackNavigator({ Cart: CartScreen }, this.config);\n\n        stack.navigationOptions = {\n            tabBarLabel: 'Carrinho',\n            tabBarIcon: ({ focused }) => {\n                const name: string = Platform.OS === 'ios' ? 'ios-cart' : 'md-cart';\n                return <TabBarIcon name={name} focused={focused} />;\n            },\n        };\n\n        stack.path = \"\";\n        return stack;\n    }\n\n    public createTabNavigator(): any {\n        const tabNavigator: any = createBottomTabNavigator({\n            catalogStack: this.createCatalogStack(),\n            cartStack: this.createCartStack()\n        });\n\n        tabNavigator.path = \"\";\n        return tabNavigator;\n    }\n}\n\nconst factory: TabNavigatorFactory = new TabNavigatorFactory();\nexport default factory.createTabNavigator();"]},"metadata":{},"sourceType":"module"}