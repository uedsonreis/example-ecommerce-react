{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-drawer/src/views/ResourceSavingScene.tsx\";import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{Screen,screensEnabled}from'react-native-screens';var FAR_FAR_AWAY=3000;var ResourceSavingScene=function(_React$Component){_inherits(ResourceSavingScene,_React$Component);function ResourceSavingScene(){_classCallCheck(this,ResourceSavingScene);return _possibleConstructorReturn(this,_getPrototypeOf(ResourceSavingScene).apply(this,arguments));}_createClass(ResourceSavingScene,[{key:\"render\",value:function render(){if(screensEnabled&&screensEnabled()){var _this$props=this.props,_isVisible=_this$props.isVisible,_rest=_objectWithoutProperties(_this$props,[\"isVisible\"]);return React.createElement(Screen,_extends({active:_isVisible?1:0},_rest,{__source:{fileName:_jsxFileName,lineNumber:21}}));}var _this$props2=this.props,isVisible=_this$props2.isVisible,children=_this$props2.children,style=_this$props2.style,rest=_objectWithoutProperties(_this$props2,[\"isVisible\",\"children\",\"style\"]);return React.createElement(View,_extends({style:[styles.container,style],collapsable:false,removeClippedSubviews:Platform.OS==='ios'?!isVisible:true,pointerEvents:isVisible?'auto':'none'},rest,{__source:{fileName:_jsxFileName,lineNumber:26}}),React.createElement(View,{style:isVisible?styles.attached:styles.detached,__source:{fileName:_jsxFileName,lineNumber:37}},children));}}]);return ResourceSavingScene;}(React.Component);export{ResourceSavingScene as default};var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},attached:{flex:1},detached:{flex:1,top:FAR_FAR_AWAY}});","map":{"version":3,"sources":["ResourceSavingScene.tsx"],"names":["FAR_FAR_AWAY","ResourceSavingScene","React","Component","screensEnabled","isVisible","rest","children","style","styles","Platform","StyleSheet","container","flex","overflow","attached","detached","top"],"mappings":"2kBAEA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,mLAEA,OAAA,MAAA,CAAA,cAAA,KAAA,sBAAA,CAQA,GAAMA,CAAAA,YAAY,CAAlB,IAAA,CAEqBC,GAAAA,CAAAA,mB,gUACV,CACP,GAAIG,cAAc,EAAIA,cAAtB,EAAA,CAAwC,CAAA,GAAA,CAAA,WAAA,CACP,KADO,KAAA,CAC9BC,UAD8B,CAAA,WAAA,CAAA,SAAA,CAChBC,KADgB,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAItC,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAQ,MAAM,CAAED,UAAS,CAAA,CAAA,CAAzB,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAP,EAAO,CAAA,CAAA,CAAA,CAAP,CALK,IAAA,CAAA,YAAA,CAOyC,KAPzC,KAAA,CAOCA,SAPD,CAAA,YAAA,CAAA,SAAA,CAOYE,QAPZ,CAAA,YAAA,CAAA,QAAA,CAOsBC,KAPtB,CAAA,YAAA,CAAA,KAAA,CAOgCF,IAPhC,CAAA,wBAAA,CAAA,YAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA,CASP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CAACG,MAAM,CAAP,SAAA,CADT,KACS,CADT,CAEE,WAAW,CAFb,KAAA,CAGE,qBAAqB,CAGnBC,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,CAAwB,CAAxBA,SAAAA,CANJ,IAAA,CAQE,aAAa,CAAEL,SAAS,CAAA,MAAA,CAR1B,MAAA,CAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAWE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAEA,SAAS,CAAGI,MAAM,CAAT,QAAA,CAAqBA,MAAM,CAAjD,QAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAZJ,QAYI,CAXF,CADF,C,kCAV6CP,KAAK,CAACC,S,CAAlCF,C,OAAAA,mB,aA8BrB,GAAMQ,CAAAA,MAAM,CAAGE,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,IAAI,CADK,CAAA,CAETC,QAAQ,CAHqB,QACpB,CADoB,CAK/BC,QAAQ,CAAE,CACRF,IAAI,CANyB,CAKrB,CALqB,CAQ/BG,QAAQ,CAAE,CACRH,IAAI,CADI,CAAA,CAERI,GAAG,CAVP,YAQY,CARqB,CAAlBN,CAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { Screen, screensEnabled } from 'react-native-screens';\n\ntype Props = {\n  isVisible: boolean;\n  children: React.ReactNode;\n  style?: any;\n};\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nexport default class ResourceSavingScene extends React.Component<Props> {\n  render() {\n    if (screensEnabled && screensEnabled()) {\n      const { isVisible, ...rest } = this.props;\n\n      // @ts-ignore\n      return <Screen active={isVisible ? 1 : 0} {...rest} />;\n    }\n    const { isVisible, children, style, ...rest } = this.props;\n\n    return (\n      <View\n        style={[styles.container, style]}\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' ? !isVisible : true\n        }\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        {...rest}\n      >\n        <View style={isVisible ? styles.attached : styles.detached}>\n          {children}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}