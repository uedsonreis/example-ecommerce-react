{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/osdnk/work/react-native-tab-view/src/SceneView.tsx\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";var SceneView=function(_React$Component){_inherits(SceneView,_React$Component);function SceneView(){var _getPrototypeOf2;var _this;_classCallCheck(this,SceneView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SceneView)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={loading:Math.abs(_this.props.navigationState.index-_this.props.index)>_this.props.lazyPreloadDistance};_this.handleEnter=function(value){var index=_this.props.index;if(value===index&&_this.state.loading){_this.setState({loading:false});}};return _this;}_createClass(SceneView,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.props.lazy){this.props.addListener('enter',this.handleEnter);}else if(this.state.loading){setTimeout(function(){return _this2.setState({loading:false});},0);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(this.props.lazy!==prevProps.lazy||this.state.loading!==prevState.loading){if(this.props.lazy&&this.state.loading){this.props.addListener('enter',this.handleEnter);}else{this.props.removeListener('enter',this.handleEnter);}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.props.removeListener('enter',this.handleEnter);}},{key:\"render\",value:function render(){var _this$props=this.props,navigationState=_this$props.navigationState,index=_this$props.index,layout=_this$props.layout,style=_this$props.style;var loading=this.state.loading;var focused=navigationState.index===index;return React.createElement(View,{accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',style:[styles.route,layout.width?{width:layout.width}:focused?StyleSheet.absoluteFill:null,style],__source:{fileName:_jsxFileName,lineNumber:92}},focused||layout.width?this.props.children({loading:loading}):null);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(state.loading&&Math.abs(props.navigationState.index-props.index)<=props.lazyPreloadDistance){return{loading:false};}return null;}}]);return SceneView;}(React.Component);export{SceneView as default};var styles=StyleSheet.create({route:{flex:1,overflow:'hidden'}});","map":{"version":3,"sources":["SceneView.tsx"],"names":["SceneView","React","Component","props","state","Math","loading","setTimeout","prevProps","prevState","handleEnter","index","value","navigationState","layout","style","focused","styles","width","StyleSheet","route","flex","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport {\n  SceneRendererProps,\n  EventEmitterProps,\n  NavigationState,\n  Route,\n} from './types';\n\ntype Props<T extends Route> = SceneRendererProps &\n  EventEmitterProps & {\n    navigationState: NavigationState<T>;\n    lazy: boolean;\n    lazyPreloadDistance: number;\n    index: number;\n    children: (props: { loading: boolean }) => React.ReactNode;\n    style?: StyleProp<ViewStyle>;\n  };\n\ntype State = {\n  loading: boolean;\n};\n\nexport default class SceneView<T extends Route> extends React.Component<\n  Props<T>,\n  State\n> {\n  static getDerivedStateFromProps(props: Props<Route>, state: State) {\n    if (\n      state.loading &&\n      Math.abs(props.navigationState.index - props.index) <=\n        props.lazyPreloadDistance\n    ) {\n      // Always render the route when it becomes focused\n      return { loading: false };\n    }\n\n    return null;\n  }\n\n  state = {\n    loading:\n      Math.abs(this.props.navigationState.index - this.props.index) >\n      this.props.lazyPreloadDistance,\n  };\n\n  componentDidMount() {\n    if (this.props.lazy) {\n      // If lazy mode is enabled, listen to when we enter screens\n      this.props.addListener('enter', this.handleEnter);\n    } else if (this.state.loading) {\n      // If lazy mode is not enabled, render the scene with a delay if not loaded already\n      // This improves the initial startup time as the scene is no longer blocking\n      setTimeout(() => this.setState({ loading: false }), 0);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props<T>, prevState: State) {\n    if (\n      this.props.lazy !== prevProps.lazy ||\n      this.state.loading !== prevState.loading\n    ) {\n      // We only need the listener if the tab hasn't loaded yet and lazy is enabled\n      if (this.props.lazy && this.state.loading) {\n        this.props.addListener('enter', this.handleEnter);\n      } else {\n        this.props.removeListener('enter', this.handleEnter);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeListener('enter', this.handleEnter);\n  }\n\n  private handleEnter = (value: number) => {\n    const { index } = this.props;\n\n    // If we're entering the current route, we need to load it\n    if (value === index && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { navigationState, index, layout, style } = this.props;\n    const { loading } = this.state;\n\n    const focused = navigationState.index === index;\n\n    return (\n      <View\n        accessibilityElementsHidden={!focused}\n        importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n        style={[\n          styles.route,\n          // If we don't have the layout yet, make the focused screen fill the container\n          // This avoids delay before we are able to render pages side by side\n          layout.width\n            ? { width: layout.width }\n            : focused\n            ? StyleSheet.absoluteFill\n            : null,\n          style,\n        ]}\n      >\n        {// Only render the route only if it's either focused or layout is available\n        // When layout is not available, we must not render unfocused routes\n        // so that the focused route can fill the screen\n        focused || layout.width ? this.props.children({ loading }) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  route: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}