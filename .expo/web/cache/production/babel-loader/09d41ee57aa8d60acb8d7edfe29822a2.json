{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _extends from\"@babel/runtime/helpers/extends\";import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-stack/src/views/StackView/StackViewLayout.tsx\";import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Easing from\"react-native-web/dist/exports/Easing\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{SceneView,StackActions,NavigationActions,NavigationProvider,ThemeContext,withOrientation}from'react-navigation';import{ScreenContainer}from'react-native-screens';import{PanGestureHandler,State as GestureState}from'react-native-gesture-handler';import Card from\"./StackViewCard\";import Header from\"../Header/Header\";import TransitionConfigs from\"./StackViewTransitionConfigs\";import HeaderStyleInterpolator from\"../Header/HeaderStyleInterpolator\";import StackGestureContext from\"../../utils/StackGestureContext\";import clamp from\"../../utils/clamp\";import{supportsImprovedSpringAnimation}from\"../../utils/ReactNativeFeatures\";var IPHONE_XS_HEIGHT=812;var IPHONE_XR_HEIGHT=896;var _Dimensions$get=Dimensions.get('window'),WINDOW_WIDTH=_Dimensions$get.width,WINDOW_HEIGHT=_Dimensions$get.height;var IS_IPHONE_X=Platform.OS==='ios'&&!Platform.isPad&&!Platform.isTVOS&&(WINDOW_HEIGHT===IPHONE_XS_HEIGHT||WINDOW_WIDTH===IPHONE_XS_HEIGHT||WINDOW_HEIGHT===IPHONE_XR_HEIGHT||WINDOW_WIDTH===IPHONE_XR_HEIGHT);var EaseInOut=Easing.inOut(Easing.ease);var HEADER_LAYOUT_PRESET=['center','left'];var HEADER_TRANSITION_PRESET=['fade-in-place','uikit'];var HEADER_BACKGROUND_TRANSITION_PRESET=['toggle','fade','translate'];var ANIMATION_DURATION=500;var POSITION_THRESHOLD=1/2;var GESTURE_RESPONSE_DISTANCE_HORIZONTAL=50;var GESTURE_RESPONSE_DISTANCE_VERTICAL=135;var USE_NATIVE_DRIVER=Platform.OS==='android'||Platform.OS==='ios';var getDefaultHeaderHeight=function getDefaultHeaderHeight(isLandscape){if(Platform.OS==='ios'){if(isLandscape&&!Platform.isPad){return 32;}else if(IS_IPHONE_X){return 88;}else{return 64;}}else if(Platform.OS==='android'){return 56;}else{return 64;}};var StackViewLayout=function(_React$Component){_inherits(StackViewLayout,_React$Component);function StackViewLayout(props){var _this;_classCallCheck(this,StackViewLayout);_this=_possibleConstructorReturn(this,_getPrototypeOf(StackViewLayout).call(this,props));_this.immediateIndex=null;_this.handleFloatingHeaderLayout=function(e){var height=e.nativeEvent.layout.height;if(height!==_this.state.floatingHeaderHeight){_this.setState({floatingHeaderHeight:height});}};_this.handlePanGestureStateChange=function(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.oldState===GestureState.ACTIVE){if(_this.positionSwitch.__getValue()===1){return;}if(_this.isMotionVertical()){_this.handleReleaseVertical(nativeEvent);}else{_this.handleReleaseHorizontal(nativeEvent);}}else if(nativeEvent.state===GestureState.ACTIVE){_this.props.onGestureBegin&&_this.props.onGestureBegin();_this.positionSwitch.setValue(0);}};_this.renderCard=function(scene){var _this$props=_this.props,transitionProps=_this$props.transitionProps,cardShadowEnabled=_this$props.cardShadowEnabled,cardOverlayEnabled=_this$props.cardOverlayEnabled,transparentCard=_this$props.transparentCard,cardStyle=_this$props.cardStyle;var _ref2=_this.transitionConfig,screenInterpolator=_ref2.screenInterpolator;var style=screenInterpolator&&screenInterpolator(_objectSpread({},transitionProps,{shadowEnabled:cardShadowEnabled,cardOverlayEnabled:cardOverlayEnabled,position:_this.position,scene:scene}));var options=scene.descriptor.options;var hasHeader=options.header!==null&&options.headerShown!==false;var headerMode=_this.getHeaderMode();var floatingContainerStyle=StyleSheet.absoluteFill;if(hasHeader&&headerMode==='float'&&!options.headerTransparent){floatingContainerStyle=_objectSpread({},Platform.select({web:{},default:StyleSheet.absoluteFillObject}),{paddingTop:_this.state.floatingHeaderHeight});}return React.createElement(Card,_extends({},transitionProps,{key:\"card_\"+scene.key,position:_this.position,realPosition:transitionProps.position,animatedStyle:style,transparent:transparentCard,style:[floatingContainerStyle,cardStyle],scene:scene,__source:{fileName:_jsxFileName,lineNumber:975}}),_this.renderInnerScene(scene));};_this.panGestureRef=React.createRef();_this.gestureX=new Animated.Value(0);_this.gestureY=new Animated.Value(0);_this.positionSwitch=new Animated.Value(1);if(Animated.subtract){_this.gestureSwitch=Animated.subtract(1,_this.positionSwitch);}else{_this.gestureSwitch=Animated.add(1,Animated.multiply(-1,_this.positionSwitch));}_this.gestureEvent=Animated.event([{nativeEvent:{translationX:_this.gestureX,translationY:_this.gestureY}}],{useNativeDriver:USE_NATIVE_DRIVER});_this.state={floatingHeaderHeight:getDefaultHeaderHeight(props.isLandscape)};return _this;}_createClass(StackViewLayout,[{key:\"renderHeader\",value:function renderHeader(scene,headerMode){var options=scene.descriptor.options;var header=options.header,headerShown=options.headerShown;if(__DEV__&&typeof header==='string'){throw new Error(\"Invalid header value: \\\"\"+header+\"\\\". The header option must be a valid React component or null, not a string.\");}if((header===null||headerShown===false)&&headerMode==='screen'){return null;}if(React.isValidElement(header)){return header;}var renderHeader=header||function(props){return React.createElement(Header,_extends({},props,{__source:{fileName:_jsxFileName,lineNumber:217}}));};var _ref3=this.transitionConfig,headerLeftInterpolator=_ref3.headerLeftInterpolator,headerTitleInterpolator=_ref3.headerTitleInterpolator,headerRightInterpolator=_ref3.headerRightInterpolator,headerBackgroundInterpolator=_ref3.headerBackgroundInterpolator;var backgroundTransitionPresetInterpolator=this.getHeaderBackgroundTransitionPreset();if(backgroundTransitionPresetInterpolator){headerBackgroundInterpolator=backgroundTransitionPresetInterpolator;}var _this$props2=this.props,transitionProps=_this$props2.transitionProps,passProps=_objectWithoutProperties(_this$props2,[\"transitionProps\"]);return React.createElement(NavigationProvider,{value:scene.descriptor.navigation,__source:{fileName:_jsxFileName,lineNumber:234}},renderHeader(_objectSpread({},passProps,transitionProps,{position:this.position,scene:scene,mode:headerMode,transitionPreset:this.getHeaderTransitionPreset(),layoutPreset:this.getHeaderLayoutPreset(),backTitleVisible:this.getHeaderBackTitleVisible(),leftInterpolator:headerLeftInterpolator,titleInterpolator:headerTitleInterpolator,rightInterpolator:headerRightInterpolator,backgroundInterpolator:headerBackgroundInterpolator})));}},{key:\"reset\",value:function reset(resetToIndex,duration){if(Platform.OS==='ios'&&supportsImprovedSpringAnimation()){Animated.spring(this.props.transitionProps.position,{toValue:resetToIndex,stiffness:6000,damping:100,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01,useNativeDriver:USE_NATIVE_DRIVER}).start();}else{Animated.timing(this.props.transitionProps.position,{toValue:resetToIndex,duration:duration,easing:EaseInOut,useNativeDriver:USE_NATIVE_DRIVER}).start();}}},{key:\"goBack\",value:function goBack(backFromIndex,duration){var _this2=this;var _this$props$transitio=this.props.transitionProps,navigation=_this$props$transitio.navigation,position=_this$props$transitio.position,scenes=_this$props$transitio.scenes;var toValue=Math.max(backFromIndex-1,0);this.immediateIndex=toValue;var onCompleteAnimation=function onCompleteAnimation(){_this2.immediateIndex=null;var backFromScene=scenes.find(function(s){return s.index===toValue+1;});if(backFromScene){navigation.dispatch(NavigationActions.back({key:backFromScene.route.key,immediate:true}));navigation.dispatch(StackActions.completeTransition());}};if(Platform.OS==='ios'&&supportsImprovedSpringAnimation()){Animated.spring(position,{toValue:toValue,stiffness:7000,damping:300,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01,useNativeDriver:USE_NATIVE_DRIVER}).start(onCompleteAnimation);}else{Animated.timing(position,{toValue:toValue,duration:duration,easing:EaseInOut,useNativeDriver:USE_NATIVE_DRIVER}).start(onCompleteAnimation);}}},{key:\"prepareAnimated\",value:function prepareAnimated(){if(this.props===this.prevProps){return;}this.prevProps=this.props;this.prepareGesture();this.preparePosition();this.prepareTransitionConfig();}},{key:\"render\",value:function render(){this.prepareAnimated();var transitionProps=this.props.transitionProps;var index=transitionProps.navigation.state.index,scenes=transitionProps.scenes;var headerMode=this.getHeaderMode();var floatingHeader=null;if(headerMode==='float'){var scene=transitionProps.scene;floatingHeader=React.createElement(View,{style:styles.floatingHeader,pointerEvents:\"box-none\",onLayout:this.handleFloatingHeaderLayout,__source:{fileName:_jsxFileName,lineNumber:356}},this.renderHeader(scene,headerMode));}return React.createElement(PanGestureHandler,_extends({},this.gestureActivationCriteria(),{ref:this.panGestureRef,onGestureEvent:this.gestureEvent,onHandlerStateChange:this.handlePanGestureStateChange,enabled:index>0&&this.isGestureEnabled(),__source:{fileName:_jsxFileName,lineNumber:367}}),React.createElement(Animated.View,{style:[styles.container,this.context==='light'?this.transitionConfig.containerStyleLight:this.transitionConfig.containerStyleDark,this.transitionConfig.containerStyle],__source:{fileName:_jsxFileName,lineNumber:374}},React.createElement(StackGestureContext.Provider,{value:this.panGestureRef,__source:{fileName:_jsxFileName,lineNumber:383}},React.createElement(ScreenContainer,{style:styles.scenes,__source:{fileName:_jsxFileName,lineNumber:384}},scenes.map(this.renderCard)),floatingHeader)));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var prevState=prevProps.transitionProps.navigation.state;var state=this.props.transitionProps.navigation.state;if(prevState.index!==state.index){this.maybeCancelGesture();}}},{key:\"getGestureResponseDistance\",value:function getGestureResponseDistance(){var scene=this.props.transitionProps.scene;var options=scene.descriptor.options;var _options$gestureRespo=options.gestureResponseDistance,userGestureResponseDistance=_options$gestureRespo===void 0?{}:_options$gestureRespo;return this.isModal()?userGestureResponseDistance.vertical||GESTURE_RESPONSE_DISTANCE_VERTICAL:userGestureResponseDistance.horizontal||GESTURE_RESPONSE_DISTANCE_HORIZONTAL;}},{key:\"gestureActivationCriteria\",value:function gestureActivationCriteria(){var layout=this.props.transitionProps.layout;var gestureResponseDistance=this.getGestureResponseDistance();var isMotionInverted=this.isMotionInverted();if(this.isMotionVertical()){var height=layout.height.__getValue();return{maxDeltaX:15,minOffsetY:isMotionInverted?-5:5,hitSlop:isMotionInverted?{top:-height+gestureResponseDistance}:{bottom:-height+gestureResponseDistance}};}else{var width=layout.width.__getValue();var hitSlop=-width+gestureResponseDistance;return{minOffsetX:isMotionInverted?-5:5,maxDeltaY:20,hitSlop:isMotionInverted?{left:hitSlop}:{right:hitSlop}};}}},{key:\"isGestureEnabled\",value:function isGestureEnabled(){var gesturesEnabled=this.props.transitionProps.scene.descriptor.options.gesturesEnabled;return typeof gesturesEnabled==='boolean'?gesturesEnabled:Platform.OS==='ios';}},{key:\"isMotionVertical\",value:function isMotionVertical(){return this.isModal();}},{key:\"isModal\",value:function isModal(){return this.props.mode==='modal';}},{key:\"isMotionInverted\",value:function isMotionInverted(){var scene=this.props.transitionProps.scene;var options=scene.descriptor.options;var gestureDirection=options.gestureDirection;if(this.isModal()){return gestureDirection==='inverted';}else{return typeof gestureDirection==='string'?gestureDirection==='inverted':I18nManager.isRTL;}}},{key:\"computeHorizontalGestureValue\",value:function computeHorizontalGestureValue(_ref4){var translationX=_ref4.translationX;var _this$props$transitio2=this.props.transitionProps,navigation=_this$props$transitio2.navigation,layout=_this$props$transitio2.layout;var index=navigation.state.index;var distance=layout.width.__getValue();var x=this.isMotionInverted()?-1*translationX:translationX;var value=index-x/distance;return clamp(index-1,value,index);}},{key:\"computeVerticalGestureValue\",value:function computeVerticalGestureValue(_ref5){var translationY=_ref5.translationY;var _this$props$transitio3=this.props.transitionProps,navigation=_this$props$transitio3.navigation,layout=_this$props$transitio3.layout;var index=navigation.state.index;var distance=layout.height.__getValue();var y=this.isMotionInverted()?-1*translationY:translationY;var value=index-y/distance;return clamp(index-1,value,index);}},{key:\"maybeCancelGesture\",value:function maybeCancelGesture(){this.positionSwitch.setValue(1);}},{key:\"prepareGesture\",value:function prepareGesture(){if(!this.isGestureEnabled()){if(this.positionSwitch.__getValue()!==1){this.positionSwitch.setValue(1);}this.gesturePosition=undefined;return;}if(this.props.transitionProps.layout.width.__getValue()===0||this.props.transitionProps.layout.height.__getValue()===0){return;}if(this.isMotionVertical()){this.prepareGestureVertical();}else{this.prepareGestureHorizontal();}}},{key:\"prepareGestureHorizontal\",value:function prepareGestureHorizontal(){var index=this.props.transitionProps.navigation.state.index;if(this.isMotionInverted()){this.gesturePosition=Animated.add(index,Animated.divide(this.gestureX,this.props.transitionProps.layout.width)).interpolate({inputRange:[index-1,index],outputRange:[index-1,index],extrapolate:'clamp'});}else{this.gesturePosition=Animated.add(index,Animated.multiply(-1,Animated.divide(this.gestureX,this.props.transitionProps.layout.width))).interpolate({inputRange:[index-1,index],outputRange:[index-1,index],extrapolate:'clamp'});}}},{key:\"prepareGestureVertical\",value:function prepareGestureVertical(){var index=this.props.transitionProps.navigation.state.index;if(this.isMotionInverted()){this.gesturePosition=Animated.add(index,Animated.divide(this.gestureY,this.props.transitionProps.layout.height)).interpolate({inputRange:[index-1,index],outputRange:[index-1,index],extrapolate:'clamp'});}else{this.gesturePosition=Animated.add(index,Animated.multiply(-1,Animated.divide(this.gestureY,this.props.transitionProps.layout.height))).interpolate({inputRange:[index-1,index],outputRange:[index-1,index],extrapolate:'clamp'});}}},{key:\"handleReleaseHorizontal\",value:function handleReleaseHorizontal(nativeEvent){var _this$props$transitio4=this.props.transitionProps,navigation=_this$props$transitio4.navigation,position=_this$props$transitio4.position,layout=_this$props$transitio4.layout;var index=navigation.state.index;var immediateIndex=this.immediateIndex==null?index:this.immediateIndex;var distance=layout.width.__getValue();var movementDirection=this.isMotionInverted()?-1:1;var movedDistance=movementDirection*nativeEvent.translationX;var gestureVelocity=movementDirection*nativeEvent.velocityX;var defaultVelocity=distance/ANIMATION_DURATION;var velocity=Math.max(Math.abs(gestureVelocity),defaultVelocity);var resetDuration=this.isMotionInverted()?(distance-movedDistance)/velocity:movedDistance/velocity;var goBackDuration=this.isMotionInverted()?movedDistance/velocity:(distance-movedDistance)/velocity;var value=this.computeHorizontalGestureValue(nativeEvent);position.setValue(value);this.positionSwitch.setValue(1);if(gestureVelocity<-50){this.props.onGestureCanceled&&this.props.onGestureCanceled();this.reset(immediateIndex,resetDuration);return;}if(gestureVelocity>50){this.props.onGestureEnd&&this.props.onGestureEnd();this.goBack(immediateIndex,goBackDuration);return;}if(value<=index-POSITION_THRESHOLD){this.props.onGestureEnd&&this.props.onGestureEnd();this.goBack(immediateIndex,goBackDuration);}else{this.props.onGestureCanceled&&this.props.onGestureCanceled();this.reset(immediateIndex,resetDuration);}}},{key:\"handleReleaseVertical\",value:function handleReleaseVertical(nativeEvent){var _this$props$transitio5=this.props.transitionProps,navigation=_this$props$transitio5.navigation,position=_this$props$transitio5.position,layout=_this$props$transitio5.layout;var index=navigation.state.index;var immediateIndex=this.immediateIndex==null?index:this.immediateIndex;var distance=layout.height.__getValue();var isMotionInverted=this.isMotionInverted();var movementDirection=isMotionInverted?-1:1;var movedDistance=movementDirection*nativeEvent.translationY;var gestureVelocity=movementDirection*nativeEvent.velocityY;var defaultVelocity=distance/ANIMATION_DURATION;var velocity=Math.max(Math.abs(gestureVelocity),defaultVelocity);var resetDuration=isMotionInverted?(distance-movedDistance)/velocity:movedDistance/velocity;var goBackDuration=isMotionInverted?movedDistance/velocity:(distance-movedDistance)/velocity;var value=this.computeVerticalGestureValue(nativeEvent);position.setValue(value);this.positionSwitch.setValue(1);if(gestureVelocity<-50){this.props.onGestureCanceled&&this.props.onGestureCanceled();this.reset(immediateIndex,resetDuration);return;}if(gestureVelocity>50){this.props.onGestureEnd&&this.props.onGestureEnd();this.goBack(immediateIndex,goBackDuration);return;}if(value<=index-POSITION_THRESHOLD){this.props.onGestureEnd&&this.props.onGestureEnd();this.goBack(immediateIndex,goBackDuration);}else{this.props.onGestureCanceled&&this.props.onGestureCanceled();this.reset(immediateIndex,resetDuration);}}},{key:\"getHeaderMode\",value:function getHeaderMode(){if(this.props.headerMode){return this.props.headerMode;}if(Platform.OS==='android'||this.props.mode==='modal'){return'screen';}return'float';}},{key:\"getHeaderBackgroundTransitionPreset\",value:function getHeaderBackgroundTransitionPreset(){var headerBackgroundTransitionPreset=this.props.headerBackgroundTransitionPreset;if(headerBackgroundTransitionPreset){if(HEADER_BACKGROUND_TRANSITION_PRESET.includes(headerBackgroundTransitionPreset)){if(headerBackgroundTransitionPreset==='fade'){return HeaderStyleInterpolator.forBackgroundWithFade;}else if(headerBackgroundTransitionPreset==='translate'){return HeaderStyleInterpolator.forBackgroundWithTranslation;}else if(headerBackgroundTransitionPreset==='toggle'){return HeaderStyleInterpolator.forBackgroundWithInactiveHidden;}}else if(__DEV__){console.error(\"Invalid configuration applied for headerBackgroundTransitionPreset - expected one of \"+HEADER_BACKGROUND_TRANSITION_PRESET.join(', ')+\" but received \"+JSON.stringify(headerBackgroundTransitionPreset));}}return null;}},{key:\"getHeaderLayoutPreset\",value:function getHeaderLayoutPreset(){var headerLayoutPreset=this.props.headerLayoutPreset;if(headerLayoutPreset){if(__DEV__){if(this.getHeaderTransitionPreset()==='uikit'&&headerLayoutPreset==='left'&&Platform.OS==='ios'){console.warn(\"headerTransitionPreset with the value 'uikit' is incompatible with headerLayoutPreset 'left'\");}}if(HEADER_LAYOUT_PRESET.includes(headerLayoutPreset)){return headerLayoutPreset;}if(__DEV__){console.error(\"Invalid configuration applied for headerLayoutPreset - expected one of \"+HEADER_LAYOUT_PRESET.join(', ')+\" but received \"+JSON.stringify(headerLayoutPreset));}}if(Platform.OS!=='ios'){return'left';}else{return'center';}}},{key:\"getHeaderTransitionPreset\",value:function getHeaderTransitionPreset(){if(Platform.OS!=='ios'||this.getHeaderMode()==='screen'){return'fade-in-place';}var headerTransitionPreset=this.props.headerTransitionPreset;if(headerTransitionPreset){if(HEADER_TRANSITION_PRESET.includes(headerTransitionPreset)){return headerTransitionPreset;}if(__DEV__){console.error(\"Invalid configuration applied for headerTransitionPreset - expected one of \"+HEADER_TRANSITION_PRESET.join(', ')+\" but received \"+JSON.stringify(headerTransitionPreset));}}return'fade-in-place';}},{key:\"getHeaderBackTitleVisible\",value:function getHeaderBackTitleVisible(){var headerBackTitleVisible=this.props.headerBackTitleVisible;var layoutPreset=this.getHeaderLayoutPreset();var enabledByDefault=!(layoutPreset==='left'||Platform.OS!=='ios');return typeof headerBackTitleVisible==='boolean'?headerBackTitleVisible:enabledByDefault;}},{key:\"renderInnerScene\",value:function renderInnerScene(scene){var _scene$descriptor=scene.descriptor,navigation=_scene$descriptor.navigation,getComponent=_scene$descriptor.getComponent;var SceneComponent=getComponent();var screenProps=this.props.screenProps;var headerMode=this.getHeaderMode();if(headerMode==='screen'){return React.createElement(View,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:887}},React.createElement(View,{style:styles.scenes,__source:{fileName:_jsxFileName,lineNumber:888}},React.createElement(SceneView,{screenProps:screenProps,navigation:navigation,component:SceneComponent,__source:{fileName:_jsxFileName,lineNumber:889}})),this.renderHeader(scene,headerMode));}return React.createElement(SceneView,{screenProps:screenProps,navigation:navigation,component:SceneComponent,__source:{fileName:_jsxFileName,lineNumber:900}});}},{key:\"prepareTransitionConfig\",value:function prepareTransitionConfig(){this.transitionConfig=TransitionConfigs.getTransitionConfig(this.props.transitionConfig,_objectSpread({},this.props.transitionProps,{position:this.position}),this.props.lastTransitionProps,this.isModal());}},{key:\"preparePosition\",value:function preparePosition(){if(this.gesturePosition){this.position=Animated.add(Animated.multiply(this.props.transitionProps.position,this.positionSwitch),Animated.multiply(this.gesturePosition,this.gestureSwitch));}else{this.position=this.props.transitionProps.position;}}}]);return StackViewLayout;}(React.Component);StackViewLayout.contextType=ThemeContext;var styles=StyleSheet.create({container:{flex:1,flexDirection:'column-reverse',overflow:'hidden'},scenes:{flex:1},floatingHeader:{position:Platform.select({default:'absolute',web:'fixed'}),left:0,top:0,right:0}});export default withOrientation(StackViewLayout);","map":{"version":3,"sources":["StackViewLayout.tsx"],"names":["State","IPHONE_XS_HEIGHT","IPHONE_XR_HEIGHT","width","WINDOW_WIDTH","height","WINDOW_HEIGHT","Dimensions","IS_IPHONE_X","Platform","EaseInOut","Easing","HEADER_LAYOUT_PRESET","HEADER_TRANSITION_PRESET","HEADER_BACKGROUND_TRANSITION_PRESET","ANIMATION_DURATION","POSITION_THRESHOLD","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","USE_NATIVE_DRIVER","getDefaultHeaderHeight","isLandscape","StackViewLayout","React","Component","contextType","ThemeContext","immediateIndex","Animated","nativeEvent","translationX","translationY","useNativeDriver","floatingHeaderHeight","props","scene","headerMode","options","header","headerShown","__DEV__","renderHeader","headerLeftInterpolator","headerTitleInterpolator","headerRightInterpolator","headerBackgroundInterpolator","backgroundTransitionPresetInterpolator","transitionProps","passProps","position","mode","transitionPreset","layoutPreset","backTitleVisible","leftInterpolator","titleInterpolator","rightInterpolator","backgroundInterpolator","resetToIndex","duration","supportsImprovedSpringAnimation","toValue","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","easing","backFromIndex","navigation","scenes","Math","onCompleteAnimation","backFromScene","s","NavigationActions","key","immediate","StackActions","e","index","floatingHeader","styles","prevProps","prevState","state","userGestureResponseDistance","layout","gestureResponseDistance","isMotionInverted","maxDeltaX","minOffsetY","hitSlop","top","bottom","minOffsetX","maxDeltaY","left","right","gesturesEnabled","gestureDirection","I18nManager","distance","x","value","clamp","y","GestureState","inputRange","outputRange","extrapolate","movementDirection","movedDistance","gestureVelocity","defaultVelocity","velocity","resetDuration","goBackDuration","headerBackgroundTransitionPreset","HeaderStyleInterpolator","console","JSON","headerLayoutPreset","headerTransitionPreset","headerBackTitleVisible","enabledByDefault","getComponent","SceneComponent","screenProps","TransitionConfigs","cardShadowEnabled","cardOverlayEnabled","transparentCard","cardStyle","screenInterpolator","style","shadowEnabled","hasHeader","floatingContainerStyle","StyleSheet","web","default","paddingTop","container","flex","flexDirection","overflow","withOrientation"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Platform,\n  View,\n  I18nManager,\n  Easing,\n  Dimensions,\n  ViewStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  SceneView,\n  StackActions,\n  NavigationActions,\n  NavigationProvider,\n  ThemeContext,\n  withOrientation,\n} from 'react-navigation';\nimport { ScreenContainer } from 'react-native-screens';\nimport {\n  PanGestureHandler,\n  State as GestureState,\n  PanGestureHandlerGestureEvent,\n  GestureHandlerGestureEventNativeEvent,\n  PanGestureHandlerEventExtra,\n} from 'react-native-gesture-handler';\n\nimport Card from './StackViewCard';\nimport Header from '../Header/Header';\nimport TransitionConfigs from './StackViewTransitionConfigs';\nimport HeaderStyleInterpolator from '../Header/HeaderStyleInterpolator';\nimport StackGestureContext from '../../utils/StackGestureContext';\nimport clamp from '../../utils/clamp';\nimport { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';\nimport {\n  Scene,\n  HeaderMode,\n  TransitionProps,\n  TransitionConfig,\n  HeaderTransitionConfig,\n  HeaderProps,\n  NavigationStackConfig,\n} from '../../types';\n\ntype Props = NavigationStackConfig & {\n  isLandscape: boolean;\n  transitionProps: TransitionProps;\n  lastTransitionProps?: TransitionProps;\n  transitionConfig?: (\n    transitionProps: TransitionProps,\n    prevTransitionProps?: TransitionProps,\n    isModal?: boolean\n  ) => TransitionConfig;\n  onGestureBegin?: () => void;\n  onGestureEnd?: () => void;\n  onGestureCanceled?: () => void;\n  screenProps?: unknown;\n};\n\ntype State = {\n  floatingHeaderHeight: number;\n};\n\nconst IPHONE_XS_HEIGHT = 812; // iPhone X and XS\nconst IPHONE_XR_HEIGHT = 896; // iPhone XR and XS Max\nconst { width: WINDOW_WIDTH, height: WINDOW_HEIGHT } = Dimensions.get('window');\nconst IS_IPHONE_X =\n  Platform.OS === 'ios' &&\n  // @ts-ignore\n  !Platform.isPad &&\n  // @ts-ignore\n  !Platform.isTVOS &&\n  (WINDOW_HEIGHT === IPHONE_XS_HEIGHT ||\n    WINDOW_WIDTH === IPHONE_XS_HEIGHT ||\n    WINDOW_HEIGHT === IPHONE_XR_HEIGHT ||\n    WINDOW_WIDTH === IPHONE_XR_HEIGHT);\n\nconst EaseInOut = Easing.inOut(Easing.ease);\n\n/**\n * Enumerate possible values for validation\n */\nconst HEADER_LAYOUT_PRESET = ['center', 'left'];\nconst HEADER_TRANSITION_PRESET = ['fade-in-place', 'uikit'];\nconst HEADER_BACKGROUND_TRANSITION_PRESET = ['toggle', 'fade', 'translate'];\n\n/**\n * The max duration of the card animation in milliseconds after released gesture.\n * The actual duration should be always less then that because the rest distance\n * is always less then the full distance of the layout.\n */\nconst ANIMATION_DURATION = 500;\n\n/**\n * The gesture distance threshold to trigger the back behavior. For instance,\n * `1/2` means that moving greater than 1/2 of the width of the screen will\n * trigger a back action\n */\nconst POSITION_THRESHOLD = 1 / 2;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst USE_NATIVE_DRIVER = Platform.OS === 'android' || Platform.OS === 'ios';\n\nconst getDefaultHeaderHeight = (isLandscape: boolean) => {\n  if (Platform.OS === 'ios') {\n    // @ts-ignore\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else if (IS_IPHONE_X) {\n      return 88;\n    } else {\n      return 64;\n    }\n  } else if (Platform.OS === 'android') {\n    return 56;\n  } else {\n    return 64;\n  }\n};\n\nclass StackViewLayout extends React.Component<Props, State> {\n  static contextType = ThemeContext;\n\n  context!: React.ContextType<typeof ThemeContext>;\n\n  private panGestureRef: React.RefObject<PanGestureHandler>;\n  private gestureX: Animated.Value;\n  private gestureY: Animated.Value;\n  private positionSwitch: Animated.Value;\n  private gestureSwitch: Animated.AnimatedInterpolation;\n  private gestureEvent: (...args: any[]) => void;\n  private gesturePosition: Animated.AnimatedInterpolation | undefined;\n\n  // @ts-ignore\n  private position: Animated.Value;\n\n  /**\n   * immediateIndex is used to represent the expected index that we will be on after a\n   * transition. To achieve a smooth animation when swiping back, the action to go back\n   * doesn't actually fire until the transition completes. The immediateIndex is used during\n   * the transition so that gestures can be handled correctly. This is a work-around for\n   * cases when the user quickly swipes back several times.\n   */\n  private immediateIndex: number | null = null;\n  private transitionConfig:\n    | HeaderTransitionConfig & TransitionConfig\n    | undefined;\n  private prevProps: Props | undefined;\n\n  constructor(props: Props) {\n    super(props);\n    this.panGestureRef = React.createRef();\n    this.gestureX = new Animated.Value(0);\n    this.gestureY = new Animated.Value(0);\n    this.positionSwitch = new Animated.Value(1);\n    if (Animated.subtract) {\n      this.gestureSwitch = Animated.subtract(1, this.positionSwitch);\n    } else {\n      this.gestureSwitch = Animated.add(\n        1,\n        Animated.multiply(-1, this.positionSwitch)\n      );\n    }\n    this.gestureEvent = Animated.event(\n      [\n        {\n          nativeEvent: {\n            translationX: this.gestureX,\n            translationY: this.gestureY,\n          },\n        },\n      ],\n      {\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }\n    );\n\n    this.state = {\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      floatingHeaderHeight: getDefaultHeaderHeight(props.isLandscape),\n    };\n  }\n\n  private renderHeader(scene: Scene, headerMode: HeaderMode) {\n    const { options } = scene.descriptor;\n    const { header, headerShown } = options;\n\n    if (__DEV__ && typeof header === 'string') {\n      throw new Error(\n        `Invalid header value: \"${header}\". The header option must be a valid React component or null, not a string.`\n      );\n    }\n\n    if ((header === null || headerShown === false) && headerMode === 'screen') {\n      return null;\n    }\n\n    // check if it's a react element\n    if (React.isValidElement(header)) {\n      return header;\n    }\n\n    // Handle the case where the header option is a function, and provide the default\n    const renderHeader =\n      // @ts-ignore TS warns about missing props, but they are in default props\n      header || ((props: HeaderProps) => <Header {...props} />);\n\n    let {\n      headerLeftInterpolator,\n      headerTitleInterpolator,\n      headerRightInterpolator,\n      headerBackgroundInterpolator,\n    } = this.transitionConfig as HeaderTransitionConfig;\n\n    const backgroundTransitionPresetInterpolator = this.getHeaderBackgroundTransitionPreset();\n    if (backgroundTransitionPresetInterpolator) {\n      headerBackgroundInterpolator = backgroundTransitionPresetInterpolator;\n    }\n\n    const { transitionProps, ...passProps } = this.props;\n\n    return (\n      <NavigationProvider value={scene.descriptor.navigation}>\n        {renderHeader({\n          ...passProps,\n          ...transitionProps,\n          position: this.position,\n          scene,\n          mode: headerMode,\n          transitionPreset: this.getHeaderTransitionPreset(),\n          layoutPreset: this.getHeaderLayoutPreset(),\n          backTitleVisible: this.getHeaderBackTitleVisible(),\n          leftInterpolator: headerLeftInterpolator,\n          titleInterpolator: headerTitleInterpolator,\n          rightInterpolator: headerRightInterpolator,\n          backgroundInterpolator: headerBackgroundInterpolator,\n        })}\n      </NavigationProvider>\n    );\n  }\n\n  private reset(resetToIndex: number, duration: number) {\n    if (Platform.OS === 'ios' && supportsImprovedSpringAnimation()) {\n      // @ts-ignore\n      Animated.spring(this.props.transitionProps.position, {\n        toValue: resetToIndex,\n        stiffness: 6000,\n        damping: 100,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }).start();\n    } else {\n      // @ts-ignore\n      Animated.timing(this.props.transitionProps.position, {\n        toValue: resetToIndex,\n        duration,\n        easing: EaseInOut,\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }).start();\n    }\n  }\n\n  private goBack(backFromIndex: number, duration: number) {\n    const { navigation, position, scenes } = this.props.transitionProps;\n    const toValue = Math.max(backFromIndex - 1, 0);\n\n    // set temporary index for gesture handler to respect until the action is\n    // dispatched at the end of the transition.\n    this.immediateIndex = toValue;\n\n    const onCompleteAnimation = () => {\n      this.immediateIndex = null;\n      const backFromScene = scenes.find(s => s.index === toValue + 1);\n      if (backFromScene) {\n        navigation.dispatch(\n          NavigationActions.back({\n            key: backFromScene.route.key,\n            immediate: true,\n          })\n        );\n        navigation.dispatch(StackActions.completeTransition());\n      }\n    };\n\n    if (Platform.OS === 'ios' && supportsImprovedSpringAnimation()) {\n      // @ts-ignore\n      Animated.spring(position, {\n        toValue,\n        stiffness: 7000,\n        damping: 300,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }).start(onCompleteAnimation);\n    } else {\n      // @ts-ignore\n      Animated.timing(position, {\n        toValue,\n        duration,\n        easing: EaseInOut,\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }).start(onCompleteAnimation);\n    }\n  }\n\n  private handleFloatingHeaderLayout = (e: LayoutChangeEvent) => {\n    const { height } = e.nativeEvent.layout;\n    if (height !== this.state.floatingHeaderHeight) {\n      this.setState({ floatingHeaderHeight: height });\n    }\n  };\n\n  private prepareAnimated() {\n    if (this.props === this.prevProps) {\n      return;\n    }\n    this.prevProps = this.props;\n\n    this.prepareGesture();\n    this.preparePosition();\n    this.prepareTransitionConfig();\n  }\n\n  render() {\n    this.prepareAnimated();\n\n    const { transitionProps } = this.props;\n    const {\n      navigation: {\n        state: { index },\n      },\n      scenes,\n    } = transitionProps;\n\n    const headerMode = this.getHeaderMode();\n    let floatingHeader = null;\n    if (headerMode === 'float') {\n      const { scene } = transitionProps;\n      floatingHeader = (\n        <View\n          style={styles.floatingHeader}\n          pointerEvents=\"box-none\"\n          onLayout={this.handleFloatingHeaderLayout}\n        >\n          {this.renderHeader(scene, headerMode)}\n        </View>\n      );\n    }\n\n    return (\n      <PanGestureHandler\n        {...this.gestureActivationCriteria()}\n        ref={this.panGestureRef}\n        onGestureEvent={this.gestureEvent}\n        onHandlerStateChange={this.handlePanGestureStateChange}\n        enabled={index > 0 && this.isGestureEnabled()}\n      >\n        <Animated.View\n          style={[\n            styles.container,\n            this.context === 'light'\n              ? this.transitionConfig!.containerStyleLight\n              : this.transitionConfig!.containerStyleDark,\n            this.transitionConfig!.containerStyle,\n          ]}\n        >\n          <StackGestureContext.Provider value={this.panGestureRef}>\n            <ScreenContainer style={styles.scenes}>\n              {scenes.map(this.renderCard)}\n            </ScreenContainer>\n            {floatingHeader}\n          </StackGestureContext.Provider>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { state: prevState } = prevProps.transitionProps.navigation;\n    const { state } = this.props.transitionProps.navigation;\n    if (prevState.index !== state.index) {\n      this.maybeCancelGesture();\n    }\n  }\n\n  private getGestureResponseDistance() {\n    const { scene } = this.props.transitionProps;\n    const { options } = scene.descriptor;\n    const {\n      gestureResponseDistance: userGestureResponseDistance = {} as {\n        vertical?: number;\n        horizontal?: number;\n      },\n    } = options;\n\n    // Doesn't make sense for a response distance of 0, so this works fine\n    return this.isModal()\n      ? userGestureResponseDistance.vertical ||\n          GESTURE_RESPONSE_DISTANCE_VERTICAL\n      : userGestureResponseDistance.horizontal ||\n          GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n  }\n\n  private gestureActivationCriteria() {\n    const { layout } = this.props.transitionProps;\n    const gestureResponseDistance = this.getGestureResponseDistance();\n    const isMotionInverted = this.isMotionInverted();\n\n    if (this.isMotionVertical()) {\n      // @ts-ignore\n      const height: number = layout.height.__getValue();\n\n      return {\n        maxDeltaX: 15,\n        minOffsetY: isMotionInverted ? -5 : 5,\n        hitSlop: isMotionInverted\n          ? { top: -height + gestureResponseDistance }\n          : { bottom: -height + gestureResponseDistance },\n      };\n    } else {\n      // @ts-ignore\n      const width: number = layout.width.__getValue();\n      const hitSlop = -width + gestureResponseDistance;\n\n      return {\n        minOffsetX: isMotionInverted ? -5 : 5,\n        maxDeltaY: 20,\n        hitSlop: isMotionInverted ? { left: hitSlop } : { right: hitSlop },\n      };\n    }\n  }\n\n  private isGestureEnabled() {\n    const gesturesEnabled = this.props.transitionProps.scene.descriptor.options\n      .gesturesEnabled;\n    return typeof gesturesEnabled === 'boolean'\n      ? gesturesEnabled\n      : Platform.OS === 'ios';\n  }\n\n  private isMotionVertical() {\n    return this.isModal();\n  }\n\n  private isModal() {\n    return this.props.mode === 'modal';\n  }\n\n  // This only currently applies to the horizontal gesture!\n  private isMotionInverted() {\n    const {\n      transitionProps: { scene },\n    } = this.props;\n    const { options } = scene.descriptor;\n    const { gestureDirection } = options;\n\n    if (this.isModal()) {\n      return gestureDirection === 'inverted';\n    } else {\n      return typeof gestureDirection === 'string'\n        ? gestureDirection === 'inverted'\n        : I18nManager.isRTL;\n    }\n  }\n\n  private computeHorizontalGestureValue({\n    translationX,\n  }: {\n    translationX: number;\n  }) {\n    const {\n      transitionProps: { navigation, layout },\n    } = this.props;\n\n    const { index } = navigation.state;\n\n    // TODO: remove this __getValue!\n    // @ts-ignore\n    const distance: number = layout.width.__getValue();\n\n    const x = this.isMotionInverted() ? -1 * translationX : translationX;\n\n    const value = index - x / distance;\n    return clamp(index - 1, value, index);\n  }\n\n  private computeVerticalGestureValue({\n    translationY,\n  }: {\n    translationY: number;\n  }) {\n    const {\n      transitionProps: { navigation, layout },\n    } = this.props;\n\n    const { index } = navigation.state;\n\n    // TODO: remove this __getValue!\n    // @ts-ignore\n    const distance: number = layout.height.__getValue();\n\n    const y = this.isMotionInverted() ? -1 * translationY : translationY;\n    const value = index - y / distance;\n    return clamp(index - 1, value, index);\n  }\n\n  private handlePanGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    // @ts-ignore\n    if (nativeEvent.oldState === GestureState.ACTIVE) {\n      // Gesture was cancelled! For example, some navigation state update\n      // arrived while the gesture was active that cancelled it out\n      // @ts-ignore\n      if (this.positionSwitch.__getValue() === 1) {\n        return;\n      }\n\n      if (this.isMotionVertical()) {\n        this.handleReleaseVertical(nativeEvent);\n      } else {\n        this.handleReleaseHorizontal(nativeEvent);\n      }\n    } else if (nativeEvent.state === GestureState.ACTIVE) {\n      this.props.onGestureBegin && this.props.onGestureBegin();\n\n      // Switch to using gesture position\n      this.positionSwitch.setValue(0);\n\n      // By enabling the gesture switch and ignoring the position here we\n      // end up with a quick jump to the initial value and then back to the\n      // gesture. While this isn't ideal, it's preferred over preventing new\n      // gestures during the animation (all gestures should be interruptible)\n      // and we will properly fix it (interruptible and from the correct position)\n      // when we integrate reanimated. If you prefer to prevent gestures during\n      // transitions, then fork this library, comment the positionSwitch value set above,\n      // and uncomment the following two lines.\n      // if (!this.props.transitionProps.position._animation) {\n      //   this.positionSwitch.setValue(0);\n      // }\n    }\n  };\n\n  // note: this will not animated so nicely because the position is unaware\n  // of the gesturePosition, so if we are in the middle of swiping the screen away\n  // and back is programatically fired then we will reset to the initial position\n  // and animate from there\n  private maybeCancelGesture() {\n    this.positionSwitch.setValue(1);\n  }\n\n  private prepareGesture() {\n    if (!this.isGestureEnabled()) {\n      // @ts-ignore\n      if (this.positionSwitch.__getValue() !== 1) {\n        this.positionSwitch.setValue(1);\n      }\n      this.gesturePosition = undefined;\n      return;\n    }\n\n    // We can't run the gesture if width or height layout is unavailable\n    if (\n      // @ts-ignore\n      this.props.transitionProps.layout.width.__getValue() === 0 ||\n      // @ts-ignore\n      this.props.transitionProps.layout.height.__getValue() === 0\n    ) {\n      return;\n    }\n\n    if (this.isMotionVertical()) {\n      this.prepareGestureVertical();\n    } else {\n      this.prepareGestureHorizontal();\n    }\n  }\n\n  private prepareGestureHorizontal() {\n    const { index } = this.props.transitionProps.navigation.state;\n\n    if (this.isMotionInverted()) {\n      this.gesturePosition = Animated.add(\n        index,\n        Animated.divide(this.gestureX, this.props.transitionProps.layout.width)\n      ).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp',\n      });\n    } else {\n      this.gesturePosition = Animated.add(\n        index,\n        Animated.multiply(\n          -1,\n          Animated.divide(\n            this.gestureX,\n            this.props.transitionProps.layout.width\n          )\n        )\n      ).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp',\n      });\n    }\n  }\n\n  private prepareGestureVertical() {\n    const { index } = this.props.transitionProps.navigation.state;\n\n    if (this.isMotionInverted()) {\n      this.gesturePosition = Animated.add(\n        index,\n        Animated.divide(this.gestureY, this.props.transitionProps.layout.height)\n      ).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp',\n      });\n    } else {\n      this.gesturePosition = Animated.add(\n        index,\n        Animated.multiply(\n          -1,\n          Animated.divide(\n            this.gestureY,\n            this.props.transitionProps.layout.height\n          )\n        )\n      ).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp',\n      });\n    }\n  }\n\n  private handleReleaseHorizontal(\n    nativeEvent: GestureHandlerGestureEventNativeEvent &\n      PanGestureHandlerEventExtra\n  ) {\n    const {\n      transitionProps: { navigation, position, layout },\n    } = this.props;\n    const { index } = navigation.state;\n    const immediateIndex =\n      this.immediateIndex == null ? index : this.immediateIndex;\n\n    // Calculate animate duration according to gesture speed and moved distance\n    // @ts-ignore\n    const distance = layout.width.__getValue();\n    const movementDirection = this.isMotionInverted() ? -1 : 1;\n    const movedDistance = movementDirection * nativeEvent.translationX;\n    const gestureVelocity = movementDirection * nativeEvent.velocityX;\n    const defaultVelocity = distance / ANIMATION_DURATION;\n    const velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);\n    const resetDuration = this.isMotionInverted()\n      ? (distance - movedDistance) / velocity\n      : movedDistance / velocity;\n    const goBackDuration = this.isMotionInverted()\n      ? movedDistance / velocity\n      : (distance - movedDistance) / velocity;\n\n    // Get the current position value and reset to using the statically driven\n    // (rather than gesture driven) position.\n    const value = this.computeHorizontalGestureValue(nativeEvent);\n    position.setValue(value);\n    this.positionSwitch.setValue(1);\n\n    // If the speed of the gesture release is significant, use that as the indication\n    // of intent\n    if (gestureVelocity < -50) {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this.reset(immediateIndex, resetDuration);\n      return;\n    }\n    if (gestureVelocity > 50) {\n      this.props.onGestureEnd && this.props.onGestureEnd();\n      this.goBack(immediateIndex, goBackDuration);\n      return;\n    }\n\n    // Then filter based on the distance the screen was moved. Over a third of the way swiped,\n    // and the back will happen.\n    if (value <= index - POSITION_THRESHOLD) {\n      this.props.onGestureEnd && this.props.onGestureEnd();\n      this.goBack(immediateIndex, goBackDuration);\n    } else {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this.reset(immediateIndex, resetDuration);\n    }\n  }\n\n  private handleReleaseVertical(\n    nativeEvent: GestureHandlerGestureEventNativeEvent &\n      PanGestureHandlerEventExtra\n  ) {\n    const {\n      transitionProps: { navigation, position, layout },\n    } = this.props;\n    const { index } = navigation.state;\n    const immediateIndex =\n      this.immediateIndex == null ? index : this.immediateIndex;\n\n    // Calculate animate duration according to gesture speed and moved distance\n    // @ts-ignore\n    const distance = layout.height.__getValue();\n    const isMotionInverted = this.isMotionInverted();\n    const movementDirection = isMotionInverted ? -1 : 1;\n    const movedDistance = movementDirection * nativeEvent.translationY;\n    const gestureVelocity = movementDirection * nativeEvent.velocityY;\n    const defaultVelocity = distance / ANIMATION_DURATION;\n    const velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);\n    const resetDuration = isMotionInverted\n      ? (distance - movedDistance) / velocity\n      : movedDistance / velocity;\n    const goBackDuration = isMotionInverted\n      ? movedDistance / velocity\n      : (distance - movedDistance) / velocity;\n\n    const value = this.computeVerticalGestureValue(nativeEvent);\n    position.setValue(value);\n    this.positionSwitch.setValue(1);\n\n    // If the speed of the gesture release is significant, use that as the indication\n    // of intent\n    if (gestureVelocity < -50) {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this.reset(immediateIndex, resetDuration);\n      return;\n    }\n    if (gestureVelocity > 50) {\n      this.props.onGestureEnd && this.props.onGestureEnd();\n      this.goBack(immediateIndex, goBackDuration);\n      return;\n    }\n\n    // Then filter based on the distance the screen was moved. Over a third of the way swiped,\n    // and the back will happen.\n    if (value <= index - POSITION_THRESHOLD) {\n      this.props.onGestureEnd && this.props.onGestureEnd();\n      this.goBack(immediateIndex, goBackDuration);\n    } else {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this.reset(immediateIndex, resetDuration);\n    }\n  }\n\n  private getHeaderMode() {\n    if (this.props.headerMode) {\n      return this.props.headerMode;\n    }\n    if (Platform.OS === 'android' || this.props.mode === 'modal') {\n      return 'screen';\n    }\n    // On web, the float header mode will enable body scrolling and stick the header\n    // to the top of the URL bar when it shrinks and expands.\n    return 'float';\n  }\n\n  private getHeaderBackgroundTransitionPreset() {\n    const { headerBackgroundTransitionPreset } = this.props;\n    if (headerBackgroundTransitionPreset) {\n      if (\n        HEADER_BACKGROUND_TRANSITION_PRESET.includes(\n          headerBackgroundTransitionPreset\n        )\n      ) {\n        if (headerBackgroundTransitionPreset === 'fade') {\n          return HeaderStyleInterpolator.forBackgroundWithFade;\n        } else if (headerBackgroundTransitionPreset === 'translate') {\n          return HeaderStyleInterpolator.forBackgroundWithTranslation;\n        } else if (headerBackgroundTransitionPreset === 'toggle') {\n          return HeaderStyleInterpolator.forBackgroundWithInactiveHidden;\n        }\n      } else if (__DEV__) {\n        console.error(\n          `Invalid configuration applied for headerBackgroundTransitionPreset - expected one of ${HEADER_BACKGROUND_TRANSITION_PRESET.join(\n            ', '\n          )} but received ${JSON.stringify(headerBackgroundTransitionPreset)}`\n        );\n      }\n    }\n\n    return null;\n  }\n\n  private getHeaderLayoutPreset() {\n    const { headerLayoutPreset } = this.props;\n    if (headerLayoutPreset) {\n      if (__DEV__) {\n        if (\n          this.getHeaderTransitionPreset() === 'uikit' &&\n          headerLayoutPreset === 'left' &&\n          Platform.OS === 'ios'\n        ) {\n          console.warn(\n            `headerTransitionPreset with the value 'uikit' is incompatible with headerLayoutPreset 'left'`\n          );\n        }\n      }\n      if (HEADER_LAYOUT_PRESET.includes(headerLayoutPreset)) {\n        return headerLayoutPreset;\n      }\n\n      if (__DEV__) {\n        console.error(\n          `Invalid configuration applied for headerLayoutPreset - expected one of ${HEADER_LAYOUT_PRESET.join(\n            ', '\n          )} but received ${JSON.stringify(headerLayoutPreset)}`\n        );\n      }\n    }\n\n    if (Platform.OS !== 'ios') {\n      return 'left';\n    } else {\n      return 'center';\n    }\n  }\n\n  private getHeaderTransitionPreset() {\n    // On Android or with header mode screen, we always just use in-place,\n    // we ignore the option entirely (at least until we have other presets)\n    if (Platform.OS !== 'ios' || this.getHeaderMode() === 'screen') {\n      return 'fade-in-place';\n    }\n\n    const { headerTransitionPreset } = this.props;\n    if (headerTransitionPreset) {\n      if (HEADER_TRANSITION_PRESET.includes(headerTransitionPreset)) {\n        return headerTransitionPreset;\n      }\n\n      if (__DEV__) {\n        console.error(\n          `Invalid configuration applied for headerTransitionPreset - expected one of ${HEADER_TRANSITION_PRESET.join(\n            ', '\n          )} but received ${JSON.stringify(headerTransitionPreset)}`\n        );\n      }\n    }\n\n    return 'fade-in-place';\n  }\n\n  private getHeaderBackTitleVisible() {\n    const { headerBackTitleVisible } = this.props;\n    const layoutPreset = this.getHeaderLayoutPreset();\n\n    // Even when we align to center on Android, people should need to opt-in to\n    // showing the back title\n    const enabledByDefault = !(\n      layoutPreset === 'left' || Platform.OS !== 'ios'\n    );\n\n    return typeof headerBackTitleVisible === 'boolean'\n      ? headerBackTitleVisible\n      : enabledByDefault;\n  }\n\n  private renderInnerScene(scene: Scene) {\n    const { navigation, getComponent } = scene.descriptor;\n    const SceneComponent = getComponent();\n\n    const { screenProps } = this.props;\n    const headerMode = this.getHeaderMode();\n    if (headerMode === 'screen') {\n      return (\n        <View style={styles.container}>\n          <View style={styles.scenes}>\n            <SceneView\n              screenProps={screenProps}\n              navigation={navigation}\n              component={SceneComponent}\n            />\n          </View>\n          {this.renderHeader(scene, headerMode)}\n        </View>\n      );\n    }\n    return (\n      <SceneView\n        screenProps={screenProps}\n        navigation={navigation}\n        component={SceneComponent}\n      />\n    );\n  }\n\n  private prepareTransitionConfig() {\n    this.transitionConfig = TransitionConfigs.getTransitionConfig(\n      this.props.transitionConfig,\n      {\n        ...this.props.transitionProps,\n        position: this.position,\n      },\n      this.props.lastTransitionProps,\n      this.isModal()\n    );\n  }\n\n  private preparePosition() {\n    if (this.gesturePosition) {\n      // FIXME: this doesn't seem right, there is setValue called in some places\n      // @ts-ignore\n      this.position = Animated.add(\n        Animated.multiply(\n          this.props.transitionProps.position,\n          this.positionSwitch\n        ),\n        Animated.multiply(this.gesturePosition, this.gestureSwitch)\n      );\n    } else {\n      this.position = this.props.transitionProps.position;\n    }\n  }\n\n  private renderCard = (scene: Scene) => {\n    const {\n      transitionProps,\n      cardShadowEnabled,\n      cardOverlayEnabled,\n      transparentCard,\n      cardStyle,\n    } = this.props;\n\n    const { screenInterpolator } = this.transitionConfig as TransitionConfig;\n    const style =\n      screenInterpolator &&\n      screenInterpolator({\n        ...transitionProps,\n        shadowEnabled: cardShadowEnabled,\n        cardOverlayEnabled,\n        position: this.position,\n        scene,\n      });\n\n    // When using a floating header, we need to add some top\n    // padding on the scene.\n    const { options } = scene.descriptor;\n    const hasHeader = options.header !== null && options.headerShown !== false;\n    const headerMode = this.getHeaderMode();\n\n    let floatingContainerStyle: ViewStyle = StyleSheet.absoluteFill as ViewStyle;\n\n    if (hasHeader && headerMode === 'float' && !options.headerTransparent) {\n      floatingContainerStyle = {\n        ...Platform.select({\n          web: {} as ViewStyle,\n          default: StyleSheet.absoluteFillObject,\n        }),\n        paddingTop: this.state.floatingHeaderHeight,\n      };\n    }\n\n    return (\n      <Card\n        {...transitionProps}\n        key={`card_${scene.key}`}\n        position={this.position}\n        realPosition={transitionProps.position}\n        animatedStyle={style}\n        transparent={transparentCard}\n        style={[floatingContainerStyle, cardStyle]}\n        scene={scene}\n      >\n        {this.renderInnerScene(scene)}\n      </Card>\n    );\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // Header is physically rendered after scenes so that Header won't be\n    // covered by the shadows of the scenes.\n    // That said, we'd have use `flexDirection: 'column-reverse'` to move\n    // Header above the scenes.\n    flexDirection: 'column-reverse',\n    overflow: 'hidden',\n  },\n  scenes: {\n    flex: 1,\n  },\n  floatingHeader: {\n    // @ts-ignore\n    position: Platform.select({ default: 'absolute', web: 'fixed' }),\n    left: 0,\n    top: 0,\n    right: 0,\n  },\n});\n\nexport default withOrientation(StackViewLayout);\n"]},"metadata":{},"sourceType":"module"}