{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from\"react\";import{Content,List,ListItem,Button,Text,Label,Container,Segment,Input}from\"native-base\";import styles from\"./styles\";export var AuthScreenView=function(_Component){_inherits(AuthScreenView,_Component);function AuthScreenView(props){var _this;_classCallCheck(this,AuthScreenView);_this=_possibleConstructorReturn(this,_getPrototypeOf(AuthScreenView).call(this,props));_this.state={segmentA:true,segmentB:false};return _this;}_createClass(AuthScreenView,[{key:\"changeActiveSegment\",value:function changeActiveSegment(){this.setState({segmentA:!this.state.segmentA,segmentB:!this.state.segmentB});}},{key:\"renderContent\",value:function renderContent(){var _this$props=this.props,user=_this$props.user,customer=_this$props.customer,actions=_this$props.actions;if(this.state.segmentA){return React.createElement(LoginScreenView,{user:user,actions:actions});}else{return React.createElement(RegisterScreenView,{user:user,customer:customer,actions:actions});}}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(Container,null,React.createElement(Segment,null,React.createElement(Button,{first:true,active:this.state.segmentA,onPress:function onPress(){return _this2.changeActiveSegment();}},React.createElement(Text,null,\"Entrar\")),React.createElement(Button,{last:true,active:this.state.segmentB,onPress:function onPress(){return _this2.changeActiveSegment();}},React.createElement(Text,null,\"Registrar\"))),this.renderContent());}}]);return AuthScreenView;}(Component);export var LoginScreenView=function(_Component2){_inherits(LoginScreenView,_Component2);function LoginScreenView(){_classCallCheck(this,LoginScreenView);return _possibleConstructorReturn(this,_getPrototypeOf(LoginScreenView).apply(this,arguments));}_createClass(LoginScreenView,[{key:\"render\",value:function render(){var _this$props2=this.props,user=_this$props2.user,actions=_this$props2.actions;return React.createElement(Content,null,React.createElement(List,null,React.createElement(ListItem,null,React.createElement(Label,null,React.createElement(Text,null,\" Email: \")),React.createElement(Input,{onChangeText:function onChangeText(text){return user.login=text;}})),React.createElement(ListItem,null,React.createElement(Label,null,React.createElement(Text,null,\" Senha: \")),React.createElement(Input,{secureTextEntry:true,onChangeText:function onChangeText(text){return user.password=text;}}))),React.createElement(Button,{onPress:function onPress(){return actions.login();},style:styles.loginButton,block:true},React.createElement(Text,null,\"Entrar\")));}}]);return LoginScreenView;}(Component);export var RegisterScreenView=function(_Component3){_inherits(RegisterScreenView,_Component3);function RegisterScreenView(){_classCallCheck(this,RegisterScreenView);return _possibleConstructorReturn(this,_getPrototypeOf(RegisterScreenView).apply(this,arguments));}_createClass(RegisterScreenView,[{key:\"render\",value:function render(){var _this$props3=this.props,user=_this$props3.user,customer=_this$props3.customer,actions=_this$props3.actions;return React.createElement(Content,null,React.createElement(List,null,React.createElement(ListItem,null,React.createElement(Label,null,React.createElement(Text,null,\" Email: \")),React.createElement(Input,{onChangeText:function onChangeText(text){return user.login=text;}})),React.createElement(ListItem,null,React.createElement(Label,null,React.createElement(Text,null,\" Senha: \")),React.createElement(Input,{secureTextEntry:true,onChangeText:function onChangeText(text){return user.password=text;}})),React.createElement(ListItem,null,React.createElement(Label,null,React.createElement(Text,null,\" Confirmar Senha: \")),React.createElement(Input,{secureTextEntry:true,onChangeText:function onChangeText(text){return actions.setState({confirmPass:text});}})),React.createElement(ListItem,null,React.createElement(Label,null,React.createElement(Text,null,\" Nome: \")),React.createElement(Input,{onChangeText:function onChangeText(text){return customer.name=text;}})),React.createElement(ListItem,null,React.createElement(Label,null,React.createElement(Text,null,\" Idade: \")),React.createElement(Input,{keyboardType:'numeric',onChangeText:function onChangeText(age){return customer.age=Number(age);}})),React.createElement(ListItem,null,React.createElement(Label,null,React.createElement(Text,null,\" Endere\\xE7o: \")),React.createElement(Input,{onChangeText:function onChangeText(text){return customer.address=text;}}))),React.createElement(Button,{onPress:function onPress(){return actions.signup();},style:styles.loginButton,block:true},React.createElement(Text,null,\"Registrar\")));}}]);return RegisterScreenView;}(Component);","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/example-ecommerce-react/src/screens/login/login.tsx"],"names":["React","Component","Content","List","ListItem","Button","Text","Label","Container","Segment","Input","styles","AuthScreenView","props","state","segmentA","segmentB","setState","user","customer","actions","changeActiveSegment","renderContent","LoginScreenView","text","login","password","loginButton","RegisterScreenView","confirmPass","name","age","Number","address","signup"],"mappings":"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","sourcesContent":["import React, { Component, ReactNode } from \"react\";\nimport { Content, List, ListItem, Button, Text, Label, Container, Segment, Input } from \"native-base\";\n\nimport styles from \"./styles\";\nimport { User } from \"../../model/user\";\nimport { Customer } from \"../../model/customer\";\n\ntype AuthProps = { user: User, customer: Customer, actions: any };\ntype State = { segmentA: boolean, segmentB: boolean };\n\nexport class AuthScreenView extends Component<AuthProps, State> {\n\n    constructor(props: AuthProps) {\n        super(props);\n\n        this.state = { segmentA: true, segmentB: false };\n    }\n\n    private changeActiveSegment(): void {\n        this.setState({ segmentA: !this.state.segmentA, segmentB: !this.state.segmentB });\n    }\n\n    private renderContent(): ReactNode {\n        const { user, customer, actions } = this.props;\n\n        if (this.state.segmentA) {\n            return ( <LoginScreenView user={user} actions={actions} /> );\n        } else {\n            return ( <RegisterScreenView user={user} customer={customer} actions={actions} /> );\n        }\n    }\n\n    public render(): ReactNode {\n        return (\n            <Container>\n                <Segment>\n                    <Button first active={this.state.segmentA} onPress={() => this.changeActiveSegment()}>\n                        <Text>Entrar</Text>\n                    </Button>\n                    <Button last active={this.state.segmentB} onPress={() => this.changeActiveSegment()}>\n                        <Text>Registrar</Text>\n                    </Button>\n                </Segment>\n                {this.renderContent()}\n            </Container>\n        );\n    }\n}\n\ntype LoginProps = { user: User, actions: any };\n\nexport class LoginScreenView extends Component<LoginProps, any> {\n    public render(): ReactNode {\n        const { user, actions } = this.props;\n        return (\n            <Content>\n                <List>\n                    <ListItem>\n                        <Label><Text> Email: </Text></Label>\n                        <Input onChangeText={text => user.login = text} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Senha: </Text></Label>\n                        <Input secureTextEntry={true} onChangeText={text => user.password = text} />\n                    </ListItem>\n                </List>\n    \n                <Button onPress={() => actions.login()} style={styles.loginButton} block>\n                    <Text>Entrar</Text>\n                </Button>\n            </Content>\n        );\n    }\n}\n\ntype RegisterProps = { user: User, customer: Customer, actions: any };\n\nexport class RegisterScreenView extends Component<RegisterProps, any> {\n    public render(): ReactNode {\n        const { user, customer, actions } = this.props;\n        return (\n            <Content>\n                <List>\n                    <ListItem>\n                        <Label><Text> Email: </Text></Label>\n                        <Input onChangeText={text => user.login = text} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Senha: </Text></Label>\n                        <Input secureTextEntry={true} onChangeText={text => user.password = text} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Confirmar Senha: </Text></Label>\n                        <Input secureTextEntry={true} onChangeText={text => actions.setState({ confirmPass: text}) } />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Nome: </Text></Label>\n                        <Input onChangeText={text => customer.name = text} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Idade: </Text></Label>\n                        <Input keyboardType={'numeric'} onChangeText={age => customer.age = Number(age)} />\n                    </ListItem>\n                    <ListItem>\n                        <Label><Text> Endereço: </Text></Label>\n                        <Input onChangeText={text => customer.address = text} />\n                    </ListItem>\n                </List>\n    \n                <Button onPress={() => actions.signup()} style={styles.loginButton} block>\n                    <Text>Registrar</Text>\n                </Button>\n            </Content>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}