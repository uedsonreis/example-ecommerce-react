{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/osdnk/work/react-native-tab-view/src/TabBarIndicator.tsx\";import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Animated,{Easing}from'react-native-reanimated';import memoize from\"./memoize\";var interpolate=Animated.interpolate,multiply=Animated.multiply,Extrapolate=Animated.Extrapolate;var TabBarIndicator=function(_React$Component){_inherits(TabBarIndicator,_React$Component);function TabBarIndicator(){var _getPrototypeOf2;var _this;_classCallCheck(this,TabBarIndicator);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TabBarIndicator)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.fadeInIndicator=function(){var _this$props=_this.props,navigationState=_this$props.navigationState,layout=_this$props.layout,width=_this$props.width,getTabWidth=_this$props.getTabWidth;if(!_this.isIndicatorShown&&width==='auto'&&layout.width&&navigationState.routes.every(function(_,i){return getTabWidth(i);})){_this.isIndicatorShown=true;Animated.timing(_this.opacity,{duration:150,toValue:1,easing:Easing.in(Easing.linear)}).start();}};_this.isIndicatorShown=false;_this.opacity=new Animated.Value(_this.props.width==='auto'?0:1);_this.getTranslateX=memoize(function(position,routes,getTabWidth){var inputRange=routes.map(function(_,i){return i;});var outputRange=routes.reduce(function(acc,_,i){if(i===0)return[0];return[].concat(_toConsumableArray(acc),[acc[i-1]+getTabWidth(i-1)]);},[]);var translateX=interpolate(position,{inputRange:inputRange,outputRange:outputRange,extrapolate:Extrapolate.CLAMP});return multiply(translateX,I18nManager.isRTL?-1:1);});_this.getWidth=memoize(function(position,routes,getTabWidth){var inputRange=routes.map(function(_,i){return i;});var outputRange=inputRange.map(getTabWidth);return interpolate(position,{inputRange:inputRange,outputRange:outputRange,extrapolate:Extrapolate.CLAMP});});return _this;}_createClass(TabBarIndicator,[{key:\"componentDidMount\",value:function componentDidMount(){this.fadeInIndicator();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.fadeInIndicator();}},{key:\"render\",value:function render(){var _this$props2=this.props,position=_this$props2.position,navigationState=_this$props2.navigationState,getTabWidth=_this$props2.getTabWidth,width=_this$props2.width,style=_this$props2.style,layout=_this$props2.layout;var routes=navigationState.routes;var translateX=routes.length>1?this.getTranslateX(position,routes,getTabWidth):0;var indicatorWidth=width==='auto'?routes.length>1?this.getWidth(position,routes,getTabWidth):getTabWidth(0):width;return React.createElement(Animated.View,{style:[styles.indicator,{width:indicatorWidth},layout.width?{transform:[{translateX:translateX}]}:{left:100/routes.length*navigationState.index+\"%\"},width==='auto'?{opacity:this.opacity}:null,style],__source:{fileName:_jsxFileName,lineNumber:117}});}}]);return TabBarIndicator;}(React.Component);export{TabBarIndicator as default};var styles=StyleSheet.create({indicator:{backgroundColor:'#ffeb3b',position:'absolute',left:0,bottom:0,right:0,height:2}});","map":{"version":3,"sources":["TabBarIndicator.tsx"],"names":["interpolate","multiply","Extrapolate","Animated","TabBarIndicator","React","Component","fadeInIndicator","navigationState","layout","width","getTabWidth","duration","toValue","easing","Easing","isIndicatorShown","opacity","getTranslateX","memoize","inputRange","routes","outputRange","i","acc","translateX","extrapolate","I18nManager","getWidth","position","style","indicatorWidth","styles","transform","left","StyleSheet","indicator","backgroundColor","bottom","right","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, I18nManager, StyleProp, ViewStyle } from 'react-native';\nimport Animated, { Easing } from 'react-native-reanimated';\n\nimport memoize from './memoize';\nimport { Route, SceneRendererProps, NavigationState } from './types';\n\nexport type GetTabWidth = (index: number) => number;\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  width: string;\n  style?: StyleProp<ViewStyle>;\n  getTabWidth: GetTabWidth;\n};\n\nconst { interpolate, multiply, Extrapolate } = Animated;\n\nexport default class TabBarIndicator<T extends Route> extends React.Component<\n  Props<T>\n> {\n  componentDidMount() {\n    this.fadeInIndicator();\n  }\n\n  componentDidUpdate() {\n    this.fadeInIndicator();\n  }\n\n  private fadeInIndicator = () => {\n    const { navigationState, layout, width, getTabWidth } = this.props;\n\n    if (\n      !this.isIndicatorShown &&\n      width === 'auto' &&\n      layout.width &&\n      // We should fade-in the indicator when we have widths for all the tab items\n      navigationState.routes.every((_, i) => getTabWidth(i))\n    ) {\n      this.isIndicatorShown = true;\n\n      Animated.timing(this.opacity, {\n        duration: 150,\n        toValue: 1,\n        easing: Easing.in(Easing.linear),\n      }).start();\n    }\n  };\n\n  private isIndicatorShown = false;\n\n  private opacity = new Animated.Value(this.props.width === 'auto' ? 0 : 1);\n\n  private getTranslateX = memoize(\n    (\n      position: Animated.Node<number>,\n      routes: Route[],\n      getTabWidth: GetTabWidth\n    ) => {\n      const inputRange = routes.map((_, i) => i);\n\n      // every index contains widths at all previous indices\n      const outputRange = routes.reduce<number[]>((acc, _, i) => {\n        if (i === 0) return [0];\n        return [...acc, acc[i - 1] + getTabWidth(i - 1)];\n      }, []);\n\n      const translateX = interpolate(position, {\n        inputRange,\n        outputRange,\n        extrapolate: Extrapolate.CLAMP,\n      });\n\n      return multiply(translateX, I18nManager.isRTL ? -1 : 1);\n    }\n  );\n\n  private getWidth = memoize(\n    (\n      position: Animated.Node<number>,\n      routes: Route[],\n      getTabWidth: GetTabWidth\n    ) => {\n      const inputRange = routes.map((_, i) => i);\n      const outputRange = inputRange.map(getTabWidth);\n\n      return interpolate(position, {\n        inputRange,\n        outputRange,\n        extrapolate: Extrapolate.CLAMP,\n      });\n    }\n  );\n\n  render() {\n    const {\n      position,\n      navigationState,\n      getTabWidth,\n      width,\n      style,\n      layout,\n    } = this.props;\n    const { routes } = navigationState;\n\n    const translateX =\n      routes.length > 1 ? this.getTranslateX(position, routes, getTabWidth) : 0;\n\n    const indicatorWidth =\n      width === 'auto'\n        ? routes.length > 1\n          ? this.getWidth(position, routes, getTabWidth)\n          : getTabWidth(0)\n        : width;\n\n    return (\n      <Animated.View\n        style={[\n          styles.indicator,\n          // If layout is not available, use `left` property for positioning the indicator\n          // This avoids rendering delay until we are able to calculate translateX\n          { width: indicatorWidth },\n          layout.width\n            ? { transform: [{ translateX }] as any }\n            : { left: `${(100 / routes.length) * navigationState.index}%` },\n          width === 'auto' ? { opacity: this.opacity } : null,\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}