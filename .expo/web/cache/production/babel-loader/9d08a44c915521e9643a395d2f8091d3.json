{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from'react';import{Text}from'native-base';import{SalesOrderScreenView}from\"./sales.order\";export var SalesOrderScreen=function(_Component){_inherits(SalesOrderScreen,_Component);function SalesOrderScreen(props){var _this;_classCallCheck(this,SalesOrderScreen);_this=_possibleConstructorReturn(this,_getPrototypeOf(SalesOrderScreen).call(this,props));_this.state={salesOrder:_this.props.navigation.state.params};return _this;}_createClass(SalesOrderScreen,[{key:\"render\",value:function render(){var total=0.0;if(this.state.salesOrder.items){this.state.salesOrder.items.forEach(function(item){total+=item.price*item.amount;});}return React.createElement(SalesOrderScreenView,{salesOrder:this.state.salesOrder,total:total});}}]);return SalesOrderScreen;}(Component);SalesOrderScreen.navigationOptions=function(_ref){var navigation=_ref.navigation;return{headerTitle:function headerTitle(){return React.createElement(Text,null,\"Pedido N\\xBA \",navigation.state.params.id);}};};","map":{"version":3,"sources":["/Users/uedsonreis/Documents/Projetos/faculdades/example-ecommerce-react/src/screens/sales-order/index.tsx"],"names":["React","Component","Text","SalesOrderScreenView","SalesOrderScreen","props","state","salesOrder","navigation","params","total","items","forEach","item","price","amount","navigationOptions","headerTitle","id"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAA4C,OAA5C,CACA,OAASC,IAAT,KAAqB,aAArB,CAGA,OAASC,oBAAT,qBAKA,UAAaC,CAAAA,gBAAb,6DAQI,0BAAYC,KAAZ,CAAwB,kDACpB,kFAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,UAAU,CAAE,MAAKF,KAAL,CAAWG,UAAX,CAAsBF,KAAtB,CAA4BG,MAD/B,CAAb,CAFoB,aAKvB,CAbL,oEAe+B,CACvB,GAAIC,CAAAA,KAAa,CAAG,GAApB,CAEA,GAAI,KAAKJ,KAAL,CAAWC,UAAX,CAAsBI,KAA1B,CAAiC,CAC7B,KAAKL,KAAL,CAAWC,UAAX,CAAsBI,KAAtB,CAA4BC,OAA5B,CAAoC,SAACC,IAAD,CAAgB,CAChDH,KAAK,EAAIG,IAAI,CAACC,KAAL,CAAaD,IAAI,CAACE,MAA3B,CACH,CAFD,EAGH,CAED,MAAO,qBAAC,oBAAD,EAAsB,UAAU,CAAE,KAAKT,KAAL,CAAWC,UAA7C,CAAyD,KAAK,CAAEG,KAAhE,EAAP,CACH,CAzBL,8BAAsCT,SAAtC,EAAaG,gB,CAEFY,iB,CAAoB,cAAoB,IAAjBR,CAAAA,UAAiB,MAAjBA,UAAiB,CAC3C,MAAO,CACHS,WAAW,CAAE,6BAAM,qBAAC,IAAD,sBAAiBT,UAAU,CAACF,KAAX,CAAiBG,MAAjB,CAAwBS,EAAzC,CAAN,EADV,CAAP,CAGH,C","sourcesContent":["import React, { Component, ReactNode } from 'react';\nimport { Text } from 'native-base';\n\nimport { SalesOrder } from '../../model/sales.order';\nimport { SalesOrderScreenView } from './sales.order';\nimport { Item } from '../../model/item';\n\ntype State = { salesOrder: SalesOrder }\n\nexport class SalesOrderScreen extends Component<any, State> {\n\n    static navigationOptions = ({ navigation }) => {\n        return {\n            headerTitle: () => <Text>Pedido NÂº {navigation.state.params.id}</Text>\n        };\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            salesOrder: this.props.navigation.state.params\n        };\n    }\n\n    public render(): ReactNode {\n        let total: number = 0.0;\n\n        if (this.state.salesOrder.items) {\n            this.state.salesOrder.items.forEach((item: Item) => {\n                total += item.price * item.amount;\n            });\n        }\n\n        return <SalesOrderScreenView salesOrder={this.state.salesOrder} total={total} />\n    }\n}"]},"metadata":{},"sourceType":"module"}